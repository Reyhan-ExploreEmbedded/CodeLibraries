Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.33\dat\en_msgs.txt -cs \
  -h+dist/default/production\EEPROM_CharRdWr_LCD.production.sym \
  --cmf=dist/default/production\EEPROM_CharRdWr_LCD.production.cmf -z \
  -Q16F877A -oC:\Users\bagwan\AppData\Local\Temp\s404.6 \
  -Mdist/default/production/EEPROM_CharRdWr_LCD.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\bagwan\AppData\Local\Temp\s404.obj \
  dist/default/production\EEPROM_CharRdWr_LCD.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\bagwan\AppData\Local\Temp\s404.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\EEPROM_CharRdWr_LCD.production.obj
                cinit                               7DE      7DE       22      FBC       0
                text17                              505      505        B      A0A       0
                text16                              570      570       18      AE0       0
                text15                              5DA      5DA       1F      BB4       0
                text14                              729      729       54      E52       0
                text13                              588      588       19      B10       0
                text12                              5F9      5F9       26      BF2       0
                text11                              61F      61F       36      C3E       0
                text10                              544      544       16      A88       0
                text9                               55A      55A       16      AB4       0
                text8                               655      655       36      CAA       0
                text7                               5BD      5BD       1D      B7A       0
                text6                               5A1      5A1       1C      B42       0
                text5                               52F      52F       15      A5E       0
                text4                               510      510        B      A20       0
                text3                               51B      51B       14      A36       0
                text2                               68B      68B       4F      D16       0
                text1                               6DA      6DA       4F      DB4       0
                maintext                            77D      77D       61      EFA       0
                cstackBANK0                          20       20        6       20       1
                cstackCOMMON                         70       70        C       70       1
                dataBANK0                            26       26        5       20       1
                bssCOMMON                            7C       7C        2       70       1
                strings                               3        3       23        6       0
                nvBANK0                              2B       2B        3       20       1
                idataBANK0                          500      500        5      A00       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7DE      7DE       22         0
                text17                              505      505        B         0
                text16                              570      570       18         0
                text15                              5DA      5DA       1F         0
                text14                              729      729       54         0
                text13                              588      588       19         0
                text12                              5F9      5F9       26         0
                text11                              61F      61F       36         0
                text10                              544      544       16         0
                text9                               55A      55A       16         0
                text8                               655      655       36         0
                text7                               5BD      5BD       1D         0
                text6                               5A1      5A1       1C         0
                text5                               52F      52F       15         0
                text4                               510      510        B         0
                text3                               51B      51B       14         0
                text2                               68B      68B       4F         0
                text1                               6DA      6DA       4F         0
                maintext                            77D      77D       61         0
                idataBANK0                          500      500        5         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         
                strings                               3        3       23         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                bssCOMMON                            7C       7C        2         1

        CLASS   BANK0          
                cstackBANK0                          20       20        6         1
                dataBANK0                            26       26        5         1
                nvBANK0                              2B       2B        3         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000023  000026         6       0  STRING      2
                cstackBANK0                    000020  00000E  00002E        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                idataBANK0                     000500  000005  000505       A00       0  CODE        2
                text17                         000505  00000B  000510       A0A       0  CODE        2
                text4                          000510  00000B  00051B       A20       0  CODE        2
                text3                          00051B  000014  00052F       A36       0  CODE        2
                text5                          00052F  000015  000544       A5E       0  CODE        2
                text10                         000544  000016  00055A       A88       0  CODE        2
                text9                          00055A  000016  000570       AB4       0  CODE        2
                text16                         000570  000018  000588       AE0       0  CODE        2
                text13                         000588  000019  0005A1       B10       0  CODE        2
                text6                          0005A1  00001C  0005BD       B42       0  CODE        2
                text7                          0005BD  00001D  0005DA       B7A       0  CODE        2
                text15                         0005DA  00001F  0005F9       BB4       0  CODE        2
                text12                         0005F9  000026  00061F       BF2       0  CODE        2
                text11                         00061F  000036  000655       C3E       0  CODE        2
                text8                          000655  000036  00068B       CAA       0  CODE        2
                text2                          00068B  00004F  0006DA       D16       0  CODE        2
                text1                          0006DA  00004F  000729       DB4       0  CODE        2
                text14                         000729  000054  00077D       E52       0  CODE        2
                maintext                       00077D  000061  0007DE       EFA       0  CODE        2
                cinit                          0007DE  000022  000800       FBC       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            002E-006F             42           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0026-04FF            4DA           2
                         0800-1FFF            800
        CONST            0026-04FF            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0026-04FF            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              002E-006F             42           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0026-04FF            4DA           2
                         0800-1FFF           1800
        STRING           0026-04FF            100           2
                         0800-1FFF            100

                                  Symbol Table

DELAY_ms@ms_count                      cstackCOMMON 0072
DELAY_us@us_count                      cstackCOMMON 0070
EEPROM_ReadByte@var_eepromAddress_u16  cstackCOMMON 0072
EEPROM_WriteByte@var_eepromAddress_u16 cstackCOMMON 0072
EEPROM_WriteByte@var_eepromData_u8     cstackCOMMON 0074
LCD_CmdWrite@var_lcdCmd_u8             cstackCOMMON 0075
LCD_DisplayChar@var_lcdData_u8         cstackCOMMON 0078
LCD_DisplayString@ptr_stringPointer_u8 cstackCOMMON 007A
LCD_GoToLine@var_lineNumber_u8         cstackCOMMON 0077
LCD_Init@var_MaxCharsPerLine_u8        cstackCOMMON 0079
LCD_Init@var_lcdMode_u8                cstackCOMMON 007B
LCD_Init@var_lcdNoOfLines_u8           cstackCOMMON 0078
_ARR_LcdLineNumAddress_U8              dataBANK0    0026
_DELAY_ms                              text3        051B
_DELAY_us                              text17       0505
_EEADR                                 (abs)        010D
_EECON2                                (abs)        018D
_EEDATA                                (abs)        010C
_EEPROM_ReadByte                       text16       0570
_EEPROM_WriteByte                      text15       05DA
_LCD_Clear                             text4        0510
_LCD_CmdWrite                          text11       061F
_LCD_DisplayChar                       text7        05BD
_LCD_DisplayString                     text6        05A1
_LCD_GoToLine                          text5        052F
_LCD_GoToNextLine                      text10       0544
_LCD_Init                              text1        06DA
_PORTB                                 (abs)        0006
_PORTD                                 (abs)        0008
_RD                                    (abs)        0C60
_STK_LCDConfig                         nvBANK0      002B
_TRISB                                 (abs)        0086
_TRISD                                 (abs)        0088
_VAR_LcdTrackCursorPos_U8              bssCOMMON    007C
_VAR_LcdTrackLineNum_U8                bssCOMMON    007D
_WR                                    (abs)        0C61
_WREN                                  (abs)        0C62
__CFG_BOREN$OFF                        (abs)        0000
__CFG_CP$OFF                           (abs)        0000
__CFG_CPD$OFF                          (abs)        0000
__CFG_FOSC$HS                          (abs)        0000
__CFG_LVP$ON                           (abs)        0000
__CFG_PWRTE$OFF                        (abs)        0000
__CFG_WDTE$OFF                         (abs)        0000
__CFG_WRT$OFF                          (abs)        0000
__Habs1                                abs1         0000
__Hbank0                               bank0        0000
__Hbank1                               bank1        0000
__Hbank2                               bank2        0000
__Hbank3                               bank3        0000
__HbssCOMMON                           bssCOMMON    0000
__Hcinit                               cinit        0800
__Hclrtext                             clrtext      0000
__Hcode                                code         0000
__Hcommon                              common       0000
__Hconfig                              config       2008
__HcstackBANK0                         cstackBANK0  0000
__HcstackCOMMON                        cstackCOMMON 0000
__HdataBANK0                           dataBANK0    0000
__Heeprom_data                         eeprom_data  0000
__Hend_init                            end_init     0003
__Hfunctab                             functab      0000
__HidataBANK0                          idataBANK0   0000
__Hidloc                               idloc        0000
__Hinit                                init         0000
__Hintentry                            intentry     0000
__Hmaintext                            maintext     0000
__HnvBANK0                             nvBANK0      0000
__Hpowerup                             powerup      0000
__Hram                                 ram          0000
__Hreset_vec                           reset_vec    0000
__Hsfr0                                sfr0         0000
__Hsfr1                                sfr1         0000
__Hsfr2                                sfr2         0000
__Hsfr3                                sfr3         0000
__Hspace_0                             (abs)        2008
__Hspace_1                             (abs)        007E
__Hspace_2                             (abs)        0000
__Hspace_3                             (abs)        0000
__Hstack                               stack        0000
__Hstrings                             strings      0000
__Htext                                text         0000
__Labs1                                abs1         0000
__Lbank0                               bank0        0000
__Lbank1                               bank1        0000
__Lbank2                               bank2        0000
__Lbank3                               bank3        0000
__LbssCOMMON                           bssCOMMON    0000
__Lcinit                               cinit        07DE
__Lclrtext                             clrtext      0000
__Lcode                                code         0000
__Lcommon                              common       0000
__Lconfig                              config       2007
__LcstackBANK0                         cstackBANK0  0000
__LcstackCOMMON                        cstackCOMMON 0000
__LdataBANK0                           dataBANK0    0000
__Leeprom_data                         eeprom_data  0000
__Lend_init                            end_init     0000
__Lfunctab                             functab      0000
__LidataBANK0                          idataBANK0   0000
__Lidloc                               idloc        0000
__Linit                                init         0000
__Lintentry                            intentry     0000
__Lmaintext                            maintext     0000
__LnvBANK0                             nvBANK0      0000
__Lpowerup                             powerup      0000
__Lram                                 ram          0000
__Lreset_vec                           reset_vec    0000
__Lsfr0                                sfr0         0000
__Lsfr1                                sfr1         0000
__Lsfr2                                sfr2         0000
__Lsfr3                                sfr3         0000
__Lspace_0                             (abs)        0000
__Lspace_1                             (abs)        0000
__Lspace_2                             (abs)        0000
__Lspace_3                             (abs)        0000
__Lstack                               stack        0000
__Lstrings                             strings      0000
__Ltext                                text         0000
__S0                                   (abs)        2008
__S1                                   (abs)        007E
__S2                                   (abs)        0000
__S3                                   (abs)        0000
___int_sp                              stack        0000
___latbits                             (abs)        0002
___sp                                  stack        0000
__end_of_DELAY_ms                      text3        052F
__end_of_DELAY_us                      text17       0510
__end_of_EEPROM_ReadByte               text16       0588
__end_of_EEPROM_WriteByte              text15       05F9
__end_of_LCD_Clear                     text4        051B
__end_of_LCD_CmdWrite                  text11       0655
__end_of_LCD_DisplayChar               text7        05DA
__end_of_LCD_DisplayString             text6        05BD
__end_of_LCD_GoToLine                  text5        0544
__end_of_LCD_GoToNextLine              text10       055A
__end_of_LCD_Init                      text1        0729
__end_of__initialization               cinit        07FC
__end_of__stringdata                   strings      0026
__end_of__stringtab                    strings      0009
__end_of_lcd_BusyCheck                 text14       077D
__end_of_lcd_DataWrite                 text8        068B
__end_of_lcd_Reset                     text2        06DA
__end_of_lcd_SendCmdSignals            text13       05A1
__end_of_lcd_SendDataSignals           text9        0570
__end_of_lcd_SendNibble                text12       061F
__end_of_main                          maintext     07DE
__initialization                       cinit        07DE
__pbssCOMMON                           bssCOMMON    007C
__pcstackBANK0                         cstackBANK0  0020
__pcstackCOMMON                        cstackCOMMON 0070
__pdataBANK0                           dataBANK0    0026
__pidataBANK0                          idataBANK0   0500
__pmaintext                            maintext     077D
__pnvBANK0                             nvBANK0      002B
__pstrings                             strings      0003
__ptext1                               text1        06DA
__ptext10                              text10       0544
__ptext11                              text11       061F
__ptext12                              text12       05F9
__ptext13                              text13       0588
__ptext14                              text14       0729
__ptext15                              text15       05DA
__ptext16                              text16       0570
__ptext17                              text17       0505
__ptext2                               text2        068B
__ptext3                               text3        051B
__ptext4                               text4        0510
__ptext5                               text5        052F
__ptext6                               text6        05A1
__ptext7                               text7        05BD
__ptext8                               text8        0655
__ptext9                               text9        055A
__size_of_DELAY_ms                     (abs)        0000
__size_of_DELAY_us                     (abs)        0000
__size_of_EEPROM_ReadByte              (abs)        0000
__size_of_EEPROM_WriteByte             (abs)        0000
__size_of_LCD_Clear                    (abs)        0000
__size_of_LCD_CmdWrite                 (abs)        0000
__size_of_LCD_DisplayChar              (abs)        0000
__size_of_LCD_DisplayString            (abs)        0000
__size_of_LCD_GoToLine                 (abs)        0000
__size_of_LCD_GoToNextLine             (abs)        0000
__size_of_LCD_Init                     (abs)        0000
__size_of_lcd_BusyCheck                (abs)        0000
__size_of_lcd_DataWrite                (abs)        0000
__size_of_lcd_Reset                    (abs)        0000
__size_of_lcd_SendCmdSignals           (abs)        0000
__size_of_lcd_SendDataSignals          (abs)        0000
__size_of_lcd_SendNibble               (abs)        0000
__size_of_main                         (abs)        0000
__stringbase                           strings      0008
__stringdata                           strings      0009
__stringtab                            strings      0003
_lcd_BusyCheck                         text14       0729
_lcd_DataWrite                         text8        0655
_lcd_Reset                             text2        068B
_lcd_SendCmdSignals                    text13       0588
_lcd_SendDataSignals                   text9        055A
_lcd_SendNibble                        text12       05F9
_main                                  maintext     077D
btemp                                  (abs)        007E
end_of_initialization                  cinit        07FC
intlevel0                              functab      0000
intlevel1                              functab      0000
intlevel2                              functab      0000
intlevel3                              functab      0000
intlevel4                              functab      0000
intlevel5                              functab      0000
lcd_BusyCheck@busyflag                 cstackCOMMON 0073
lcd_DataWrite@dat                      cstackCOMMON 0075
lcd_SendNibble@var                     cstackCOMMON 0071
ltemp                                  (abs)        007E
ltemp0                                 (abs)        007E
ltemp1                                 (abs)        0082
ltemp2                                 (abs)        0086
ltemp3                                 (abs)        0080
main@eeprom_address                    cstackBANK0  0024
main@read_char                         cstackBANK0  0023
main@write_char                        cstackBANK0  0025
reset_vec                              reset_vec    0000
stackhi                                (abs)        0000
stacklo                                (abs)        0000
start                                  init         0000
start_initialization                   cinit        07DE
ttemp                                  (abs)        007E
ttemp0                                 (abs)        007E
ttemp1                                 (abs)        0081
ttemp2                                 (abs)        0084
ttemp3                                 (abs)        0087
ttemp4                                 (abs)        007F
wtemp                                  (abs)        007E
wtemp0                                 (abs)        007E
wtemp1                                 (abs)        0080
wtemp2                                 (abs)        0082
wtemp3                                 (abs)        0084
wtemp4                                 (abs)        0086
wtemp5                                 (abs)        0088
wtemp6                                 (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 15 in file "EEPROM_CharRdWr_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  write_char      1    5[BANK0 ] unsigned char 
  eeprom_addre    1    4[BANK0 ] unsigned char 
  read_char       1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_EEPROM_ReadByte
		_EEPROM_WriteByte
		_LCD_DisplayChar
		_LCD_DisplayString
		_LCD_GoToLine
		_LCD_Init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 112 in file "lcd.c"
 Parameters:    Size  Location     Type
  var_lcdMode_    1    wreg     unsigned char 
  var_lcdNoOfL    1    8[COMMON] unsigned char 
  var_MaxChars    1    9[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  var_lcdMode_    1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_DELAY_ms
		_LCD_Clear
		_LCD_CmdWrite
		_lcd_Reset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_Reset *****************
 Defined at:
		line 923 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_DELAY_ms
		_DELAY_us
		_lcd_SendCmdSignals
		_lcd_SendNibble
 This function is called by:
		_LCD_Init
 This function uses a non-reentrant model


 *************** function _DELAY_ms *****************
 Defined at:
		line 76 in file "delay.c"
 Parameters:    Size  Location     Type
  ms_count        2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_LCD_Init
		_lcd_Reset
		_DELAY_sec
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 154 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_CmdWrite
		_LCD_GoToLine
 This function is called by:
		_LCD_Init
 This function uses a non-reentrant model


 *************** function _LCD_GoToLine *****************
 Defined at:
		line 181 in file "lcd.c"
 Parameters:    Size  Location     Type
  var_lineNumb    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  var_lineNumb    1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_CmdWrite
 This function is called by:
		_main
		_LCD_Clear
 This function uses a non-reentrant model


 *************** function _LCD_DisplayString *****************
 Defined at:
		line 344 in file "lcd.c"
 Parameters:    Size  Location     Type
  ptr_stringPo    1    wreg     PTR unsigned char 
		 -> STR_2(14), STR_1(15), 
 Auto vars:     Size  Location     Type
  ptr_stringPo    1   10[COMMON] PTR unsigned char 
		 -> STR_2(14), STR_1(15), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_DisplayChar
 This function is called by:
		_main
		_LCD_Printf
 This function uses a non-reentrant model


 *************** function _LCD_DisplayChar *****************
 Defined at:
		line 309 in file "lcd.c"
 Parameters:    Size  Location     Type
  var_lcdData_    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  var_lcdData_    1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_GoToNextLine
		_lcd_DataWrite
 This function is called by:
		_main
		_LCD_DisplayString
		_LCD_Printf
 This function uses a non-reentrant model


 *************** function _lcd_DataWrite *****************
 Defined at:
		line 839 in file "lcd.c"
 Parameters:    Size  Location     Type
  dat             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dat             1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_BusyCheck
		_lcd_SendDataSignals
		_lcd_SendNibble
 This function is called by:
		_LCD_DisplayChar
 This function uses a non-reentrant model


 *************** function _lcd_SendDataSignals *****************
 Defined at:
		line 994 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_lcd_DataWrite
 This function uses a non-reentrant model


 *************** function _LCD_GoToNextLine *****************
 Defined at:
		line 208 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_CmdWrite
 This function is called by:
		_LCD_DisplayChar
 This function uses a non-reentrant model


 *************** function _LCD_CmdWrite *****************
 Defined at:
		line 274 in file "lcd.c"
 Parameters:    Size  Location     Type
  var_lcdCmd_u    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  var_lcdCmd_u    1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_BusyCheck
		_lcd_SendCmdSignals
		_lcd_SendNibble
 This function is called by:
		_LCD_Init
		_LCD_Clear
		_LCD_GoToLine
		_LCD_GoToNextLine
 This function uses a non-reentrant model


 *************** function _lcd_SendNibble *****************
 Defined at:
		line 953 in file "lcd.c"
 Parameters:    Size  Location     Type
  var             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  var             1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_CmdWrite
		_lcd_DataWrite
		_lcd_Reset
 This function uses a non-reentrant model


 *************** function _lcd_SendCmdSignals *****************
 Defined at:
		line 972 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_LCD_CmdWrite
		_lcd_Reset
 This function uses a non-reentrant model


 *************** function _lcd_BusyCheck *****************
 Defined at:
		line 873 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  busyflag        1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_LCD_CmdWrite
		_lcd_DataWrite
 This function uses a non-reentrant model


 *************** function _EEPROM_WriteByte *****************
 Defined at:
		line 57 in file "eeprom.c"
 Parameters:    Size  Location     Type
  var_eepromAd    2    2[COMMON] unsigned int 
  var_eepromDa    1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _EEPROM_ReadByte *****************
 Defined at:
		line 84 in file "eeprom.c"
 Parameters:    Size  Location     Type
  var_eepromAd    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_DELAY_us
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DELAY_us *****************
 Defined at:
		line 55 in file "delay.c"
 Parameters:    Size  Location     Type
  us_count        2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_DELAY_ms
		_EEPROM_WriteByte
		_EEPROM_ReadByte
		_lcd_BusyCheck
		_lcd_Reset
		_lcd_SendCmdSignals
		_lcd_SendDataSignals
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
delay.c
		_DELAY_ms      		CODE           	051B	0000	20
		_DELAY_us      		CODE           	0505	0000	11

delay.c estimated size: 31

EEPROM_CharRdWr_LCD.c
		_main          		CODE           	077D	0000	97

EEPROM_CharRdWr_LCD.c estimated size: 97

eeprom.c
		_EEPROM_WriteBy		CODE           	05DA	0000	31
		_EEPROM_ReadByt		CODE           	0570	0000	24

eeprom.c estimated size: 55

shared
		__stringtab    		STRING         	0003	0000	6
		__stringdata   		STRING         	0009	0000	29
		__initializatio		CODE           	07DE	0000	30

shared estimated size: 65

lcd.c
		_LCD_Init      		CODE           	06DA	0000	79
		_lcd_SendCmdSig		CODE           	0588	0000	25
		_LCD_CmdWrite  		CODE           	061F	0000	54
		_LCD_Clear     		CODE           	0510	0000	11
		_LCD_DisplayStr		CODE           	05A1	0000	28
		_LCD_GoToLine  		CODE           	052F	0000	21
		_lcd_BusyCheck 		CODE           	0729	0000	84
		_LCD_GoToNextLi		CODE           	0544	0000	22
		_lcd_SendNibble		CODE           	05F9	0000	38
		_lcd_Reset     		CODE           	068B	0000	79
		_lcd_DataWrite 		CODE           	0655	0000	54
		_LCD_DisplayCha		CODE           	05BD	0000	29
		_lcd_SendDataSi		CODE           	055A	0000	22

lcd.c estimated size: 546

