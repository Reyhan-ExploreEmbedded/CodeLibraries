

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Feb 15 07:39:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0087                     	;# 
    77  0088                     	;# 
    78  0089                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0088                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218                           
   219                           	psect	idataBANK0
   220  016B                     __pidataBANK0:	
   221                           
   222                           ;initializer for _ARR_LcdLineNumAddress_U8
   223  016B  3480               	retlw	128
   224  016C  3480               	retlw	128
   225  016D  34C0               	retlw	192
   226  016E  3490               	retlw	144
   227  016F  34D0               	retlw	208
   228                           
   229                           	psect	nvBANK0
   230  0064                     __pnvBANK0:	
   231  0064                     _STK_LCDConfig:	
   232  0064                     	ds	3
   233  0006                     _PORTB	set	6
   234  0008                     _PORTD	set	8
   235  0086                     _TRISB	set	134
   236  0088                     _TRISD	set	136
   237  010D                     _EEADR	set	269
   238  010C                     _EEDATA	set	268
   239  018D                     _EECON2	set	397
   240  0C60                     _RD	set	3168
   241  0C61                     _WR	set	3169
   242  0C62                     _WREN	set	3170
   243                           
   244                           	psect	strings
   245  0003                     __pstrings:	
   246  0003                     stringtab:	
   247  0003                     __stringtab:	
   248  0003                     stringcode:	
   249                           ;	String table - string pointers are 1 byte each
   250                           
   251  0003                     stringdir:	
   252  0003  3000               	movlw	high stringdir
   253  0004  008A               	movwf	10
   254  0005  0804               	movf	4,w
   255  0006  0A84               	incf	4,f
   256  0007  0782               	addwf	2,f
   257  0008                     __stringbase:	
   258  0008  3400               	retlw	0
   259  0009                     __end_of__stringtab:	
   260  0009                     __stringdata:	
   261  0009                     STR_4:	
   262  0009  3433               	retlw	51	;'3'
   263  000A  3432               	retlw	50	;'2'
   264  000B  342D               	retlw	45	;'-'
   265  000C  3462               	retlw	98	;'b'
   266  000D  3469               	retlw	105	;'i'
   267  000E  3474               	retlw	116	;'t'
   268  000F  3420               	retlw	32	;' '
   269  0010  344E               	retlw	78	;'N'
   270  0011  3475               	retlw	117	;'u'
   271  0012  346D               	retlw	109	;'m'
   272  0013  3462               	retlw	98	;'b'
   273  0014  3465               	retlw	101	;'e'
   274  0015  3472               	retlw	114	;'r'
   275  0016  3420               	retlw	32	;' '
   276  0017  3420               	retlw	32	;' '
   277  0018  3420               	retlw	32	;' '
   278  0019  3472               	retlw	114	;'r'
   279  001A  3465               	retlw	101	;'e'
   280  001B  3461               	retlw	97	;'a'
   281  001C  3464               	retlw	100	;'d'
   282  001D  3420               	retlw	32	;' '
   283  001E  3477               	retlw	119	;'w'
   284  001F  3472               	retlw	114	;'r'
   285  0020  3469               	retlw	105	;'i'
   286  0021  3474               	retlw	116	;'t'
   287  0022  3465               	retlw	101	;'e'
   288  0023  3400               	retlw	0
   289  0024                     STR_1:	
   290  0024  3431               	retlw	49	;'1'
   291  0025  3436               	retlw	54	;'6'
   292  0026  342D               	retlw	45	;'-'
   293  0027  3462               	retlw	98	;'b'
   294  0028  3469               	retlw	105	;'i'
   295  0029  3474               	retlw	116	;'t'
   296  002A  3420               	retlw	32	;' '
   297  002B  344E               	retlw	78	;'N'
   298  002C  3475               	retlw	117	;'u'
   299  002D  346D               	retlw	109	;'m'
   300  002E  3462               	retlw	98	;'b'
   301  002F  3465               	retlw	101	;'e'
   302  0030  3472               	retlw	114	;'r'
   303  0031  3420               	retlw	32	;' '
   304  0032  3420               	retlw	32	;' '
   305  0033  3420               	retlw	32	;' '
   306  0034  3472               	retlw	114	;'r'
   307  0035  3465               	retlw	101	;'e'
   308  0036  3461               	retlw	97	;'a'
   309  0037  3464               	retlw	100	;'d'
   310  0038  3420               	retlw	32	;' '
   311  0039  3477               	retlw	119	;'w'
   312  003A  3472               	retlw	114	;'r'
   313  003B  3469               	retlw	105	;'i'
   314  003C  3474               	retlw	116	;'t'
   315  003D  3465               	retlw	101	;'e'
   316  003E  3400               	retlw	0
   317  003F                     STR_6:	
   318  003F  3452               	retlw	82	;'R'
   319  0040  3464               	retlw	100	;'d'
   320  0041  343A               	retlw	58	;':'
   321  0042  3425               	retlw	37	;'%'
   322  0043  3455               	retlw	85	;'U'
   323  0044  3400               	retlw	0
   324  0045                     STR_5:	
   325  0045  3457               	retlw	87	;'W'
   326  0046  3472               	retlw	114	;'r'
   327  0047  343A               	retlw	58	;':'
   328  0048  3425               	retlw	37	;'%'
   329  0049  3455               	retlw	85	;'U'
   330  004A  3400               	retlw	0
   331  004B                     STR_3:	
   332  004B  3452               	retlw	82	;'R'
   333  004C  3464               	retlw	100	;'d'
   334  004D  343A               	retlw	58	;':'
   335  004E  3425               	retlw	37	;'%'
   336  004F  3475               	retlw	117	;'u'
   337  0050  3400               	retlw	0
   338  0051                     STR_2:	
   339  0051  3457               	retlw	87	;'W'
   340  0052  3472               	retlw	114	;'r'
   341  0053  343A               	retlw	58	;':'
   342  0054  3425               	retlw	37	;'%'
   343  0055  3475               	retlw	117	;'u'
   344  0056  3400               	retlw	0
   345  0057                     __end_of__stringdata:	
   346                           
   347                           ; #config settings
   348  0000                     
   349                           	psect	cinit
   350  07DE                     start_initialization:	
   351  07DE                     __initialization:	
   352                           
   353                           ; Clear objects allocated to BANK0
   354  07DE  01E7               	clrf	__pbssBANK0& (0+127)
   355  07DF  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   356                           
   357                           ; Initialize objects allocated to BANK0
   358  07E0  120A  118A  216B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   359  07E5  00DF               	movwf	__pdataBANK0& (0+127)
   360  07E6  120A  118A  216C  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   361  07EB  00E0               	movwf	(__pdataBANK0+1)& (0+127)
   362  07EC  120A  118A  216D  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   363  07F1  00E1               	movwf	(__pdataBANK0+2)& (0+127)
   364  07F2  120A  118A  216E  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   365  07F7  00E2               	movwf	(__pdataBANK0+3)& (0+127)
   366  07F8  120A  118A  216F   	fcall	__pidataBANK0+4	;fetch initializer
   367  07FB  00E3               	movwf	(__pdataBANK0+4)& (0+127)
   368  07FC                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  07FC                     __end_of__initialization:	
   372  07FC  0183               	clrf	3
   373  07FD  120A  118A  2D54   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376  0067                     __pbssBANK0:	
   377  0067                     _VAR_LcdTrackCursorPos_U8:	
   378  0067                     	ds	1
   379  0068                     _VAR_LcdTrackLineNum_U8:	
   380  0068                     	ds	1
   381                           
   382                           	psect	dataBANK0
   383  005F                     __pdataBANK0:	
   384  005F                     _ARR_LcdLineNumAddress_U8:	
   385  005F                     	ds	5
   386                           
   387                           	psect	cstackCOMMON
   388  0070                     __pcstackCOMMON:	
   389  0070                     ?_LCD_CmdWrite:	
   390  0070                     ?_lcd_Reset:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?_LCD_Clear:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ?_LCD_GoToLine:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_lcd_BusyCheck:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?_lcd_SendCmdSignals:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0070                     ?_lcd_SendNibble:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ??_lcd_SendNibble:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0070                     ?_lcd_DataWrite:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0070                     ?_lcd_SendDataSignals:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0070                     ?_DELAY_us:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0070                     ?_LCD_GoToNextLine:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0070                     ?_LCD_DisplayChar:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0070                     ?_LCD_DisplayString:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0070                     ?___lldiv:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0070                     DELAY_us@us_count:	
   436                           ; 4 bytes @ 0x0
   437                           
   438  0070                     ___lldiv@divisor:	
   439                           ; 2 bytes @ 0x0
   440                           
   441                           
   442                           ; 4 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     lcd_SendNibble@var:	
   445                           
   446                           ; 1 bytes @ 0x1
   447  0071                     	ds	1
   448  0072                     ??_lcd_BusyCheck:	
   449  0072                     ??_lcd_SendCmdSignals:	
   450                           ; 0 bytes @ 0x2
   451                           
   452  0072                     ??_lcd_SendDataSignals:	
   453                           ; 0 bytes @ 0x2
   454                           
   455  0072                     ??_DELAY_us:	
   456                           ; 0 bytes @ 0x2
   457                           
   458  0072                     ?_DELAY_ms:	
   459                           ; 0 bytes @ 0x2
   460                           
   461  0072                     ?_EEPROM_WriteByte:	
   462                           ; 0 bytes @ 0x2
   463                           
   464  0072                     ?_EEPROM_ReadByte:	
   465                           ; 0 bytes @ 0x2
   466                           
   467  0072                     DELAY_ms@ms_count:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     EEPROM_WriteByte@var_eepromAddress_u16:	
   471                           ; 2 bytes @ 0x2
   472                           
   473  0072                     EEPROM_ReadByte@var_eepromAddress_u16:	
   474                           ; 2 bytes @ 0x2
   475                           
   476                           
   477                           ; 2 bytes @ 0x2
   478  0072                     	ds	1
   479  0073                     lcd_BusyCheck@busyflag:	
   480                           
   481                           ; 1 bytes @ 0x3
   482  0073                     	ds	1
   483  0074                     ??_LCD_CmdWrite:	
   484  0074                     ??_lcd_Reset:	
   485                           ; 0 bytes @ 0x4
   486                           
   487  0074                     ??_lcd_DataWrite:	
   488                           ; 0 bytes @ 0x4
   489                           
   490  0074                     ??_DELAY_ms:	
   491                           ; 0 bytes @ 0x4
   492                           
   493  0074                     ?_DELAY_sec:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0074                     ??_EEPROM_ReadByte:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0074                     ?_EEPROM_ReadNBytes:	
   500                           ; 0 bytes @ 0x4
   501                           
   502  0074                     EEPROM_WriteByte@var_eepromData_u8:	
   503                           ; 0 bytes @ 0x4
   504                           
   505  0074                     DELAY_sec@sec_count:	
   506                           ; 1 bytes @ 0x4
   507                           
   508  0074                     EEPROM_ReadNBytes@var_eepromAddress_16:	
   509                           ; 2 bytes @ 0x4
   510                           
   511  0074                     ___lldiv@dividend:	
   512                           ; 2 bytes @ 0x4
   513                           
   514                           
   515                           ; 4 bytes @ 0x4
   516  0074                     	ds	1
   517  0075                     ??_EEPROM_WriteByte:	
   518  0075                     ?_EEPROM_WriteNBytes:	
   519                           ; 0 bytes @ 0x5
   520                           
   521  0075                     LCD_CmdWrite@var_lcdCmd_u8:	
   522                           ; 0 bytes @ 0x5
   523                           
   524  0075                     lcd_DataWrite@dat:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     EEPROM_WriteNBytes@var_eepromAddress_u16:	
   528                           ; 1 bytes @ 0x5
   529                           
   530                           
   531                           ; 2 bytes @ 0x5
   532  0075                     	ds	1
   533  0076                     ??_LCD_GoToLine:	
   534  0076                     ??_DELAY_sec:	
   535                           ; 0 bytes @ 0x6
   536                           
   537  0076                     ??_LCD_GoToNextLine:	
   538                           ; 0 bytes @ 0x6
   539                           
   540  0076                     EEPROM_ReadNBytes@ptr_ramAddress_u8:	
   541                           ; 0 bytes @ 0x6
   542                           
   543                           
   544                           ; 1 bytes @ 0x6
   545  0076                     	ds	1
   546  0077                     ??_LCD_DisplayChar:	
   547  0077                     EEPROM_WriteNBytes@ptr_ramAddress_u8:	
   548                           ; 0 bytes @ 0x7
   549                           
   550  0077                     LCD_GoToLine@var_lineNumber_u8:	
   551                           ; 1 bytes @ 0x7
   552                           
   553  0077                     EEPROM_ReadNBytes@var_numOfBytes_u16:	
   554                           ; 1 bytes @ 0x7
   555                           
   556                           
   557                           ; 2 bytes @ 0x7
   558  0077                     	ds	1
   559  0078                     ??_LCD_Clear:	
   560  0078                     ?_LCD_Init:	
   561                           ; 0 bytes @ 0x8
   562                           
   563  0078                     ??___lldiv:	
   564                           ; 0 bytes @ 0x8
   565                           
   566  0078                     LCD_Init@var_lcdNoOfLines_u8:	
   567                           ; 0 bytes @ 0x8
   568                           
   569  0078                     LCD_DisplayChar@var_lcdData_u8:	
   570                           ; 1 bytes @ 0x8
   571                           
   572  0078                     EEPROM_WriteNBytes@var_numOfBytes_u16:	
   573                           ; 1 bytes @ 0x8
   574                           
   575                           
   576                           ; 2 bytes @ 0x8
   577  0078                     	ds	1
   578  0079                     ??_EEPROM_ReadNBytes:	
   579  0079                     ??_LCD_DisplayString:	
   580                           ; 0 bytes @ 0x9
   581                           
   582  0079                     LCD_Init@var_MaxCharsPerLine_u8:	
   583                           ; 0 bytes @ 0x9
   584                           
   585  0079                     ___lldiv@quotient:	
   586                           ; 1 bytes @ 0x9
   587                           
   588                           
   589                           ; 4 bytes @ 0x9
   590  0079                     	ds	1
   591  007A                     ??_EEPROM_WriteNBytes:	
   592  007A                     ??_LCD_Init:	
   593                           ; 0 bytes @ 0xA
   594                           
   595  007A                     LCD_DisplayString@ptr_stringPointer_u8:	
   596                           ; 0 bytes @ 0xA
   597                           
   598                           
   599                           ; 1 bytes @ 0xA
   600  007A                     	ds	1
   601  007B                     LCD_Init@var_lcdMode_u8:	
   602                           
   603                           ; 1 bytes @ 0xB
   604  007B                     	ds	2
   605  007D                     ___lldiv@counter:	
   606                           
   607                           ; 1 bytes @ 0xD
   608  007D                     	ds	1
   609                           
   610                           	psect	cstackBANK0
   611  0020                     __pcstackBANK0:	
   612  0020                     ?___bmul:	
   613  0020                     ___bmul@multiplicand:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 1 bytes @ 0x0
   618  0020                     	ds	1
   619  0021                     ??___bmul:	
   620                           
   621                           ; 0 bytes @ 0x1
   622  0021                     	ds	1
   623  0022                     ___bmul@product:	
   624                           
   625                           ; 1 bytes @ 0x2
   626  0022                     	ds	1
   627  0023                     ___bmul@multiplier:	
   628                           
   629                           ; 1 bytes @ 0x3
   630  0023                     	ds	1
   631  0024                     ?_LCD_DisplayDecimalNumber:	
   632  0024                     LCD_DisplayDecimalNumber@var_DecNumber_u32:	
   633                           ; 0 bytes @ 0x4
   634                           
   635                           
   636                           ; 4 bytes @ 0x4
   637  0024                     	ds	4
   638  0028                     LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8:	
   639                           
   640                           ; 1 bytes @ 0x8
   641  0028                     	ds	1
   642  0029                     ??_LCD_DisplayDecimalNumber:	
   643                           
   644                           ; 0 bytes @ 0x9
   645  0029                     	ds	2
   646  002B                     LCD_DisplayDecimalNumber@a:	
   647                           
   648                           ; 10 bytes @ 0xB
   649  002B                     	ds	10
   650  0035                     LCD_DisplayDecimalNumber@i:	
   651                           
   652                           ; 1 bytes @ 0x15
   653  0035                     	ds	1
   654  0036                     ?_LCD_Printf:	
   655                           
   656                           ; 0 bytes @ 0x16
   657  0036                     	ds	4
   658  003A                     ??_LCD_Printf:	
   659                           
   660                           ; 0 bytes @ 0x1A
   661  003A                     	ds	2
   662  003C                     LCD_Printf@var_floatNum_f32:	
   663                           
   664                           ; 3 bytes @ 0x1C
   665  003C                     	ds	3
   666  003F                     LCD_Printf@str:	
   667                           
   668                           ; 1 bytes @ 0x1F
   669  003F                     	ds	1
   670  0040                     LCD_Printf@var_num_u32:	
   671                           
   672                           ; 4 bytes @ 0x20
   673  0040                     	ds	4
   674  0044                     LCD_Printf@var_num_u16:	
   675                           
   676                           ; 2 bytes @ 0x24
   677  0044                     	ds	2
   678  0046                     LCD_Printf@argList:	
   679                           
   680                           ; 1 bytes @ 0x26
   681  0046                     	ds	1
   682  0047                     LCD_Printf@var_num_s32:	
   683                           
   684                           ; 4 bytes @ 0x27
   685  0047                     	ds	4
   686  004B                     LCD_Printf@var_num_s16:	
   687                           
   688                           ; 2 bytes @ 0x2B
   689  004B                     	ds	2
   690  004D                     LCD_Printf@ptr:	
   691                           
   692                           ; 1 bytes @ 0x2D
   693  004D                     	ds	1
   694  004E                     LCD_Printf@var_numOfDigitsToDisp_u8:	
   695                           
   696                           ; 1 bytes @ 0x2E
   697  004E                     	ds	1
   698  004F                     LCD_Printf@ch:	
   699                           
   700                           ; 1 bytes @ 0x2F
   701  004F                     	ds	1
   702  0050                     LCD_Printf@argp:	
   703                           
   704                           ; 1 bytes @ 0x30
   705  0050                     	ds	1
   706  0051                     ??_main:	
   707                           
   708                           ; 0 bytes @ 0x31
   709  0051                     	ds	2
   710  0053                     main@var_readNumber_u32:	
   711                           
   712                           ; 4 bytes @ 0x33
   713  0053                     	ds	4
   714  0057                     main@var_readNumber_u16:	
   715                           
   716                           ; 2 bytes @ 0x37
   717  0057                     	ds	2
   718  0059                     main@var_writeNumber_u32:	
   719                           
   720                           ; 4 bytes @ 0x39
   721  0059                     	ds	4
   722  005D                     main@var_writeNumber_u16:	
   723                           
   724                           ; 2 bytes @ 0x3D
   725  005D                     	ds	2
   726                           
   727                           	psect	maintext
   728  0554                     __pmaintext:	
   729 ;;
   730 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   731 ;;
   732 ;; *************** function _main *****************
   733 ;; Defined at:
   734 ;;		line 16 in file "main.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  var_writeNum    4   57[BANK0 ] unsigned long 
   739 ;;  var_readNumb    4   51[BANK0 ] unsigned long 
   740 ;;  var_writeNum    2   61[BANK0 ] unsigned int 
   741 ;;  var_readNumb    2   55[BANK0 ] unsigned int 
   742 ;; Return value:  Size  Location     Type
   743 ;;		None               void
   744 ;; Registers used:
   745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 17F/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0      12       0       0       0
   753 ;;      Temps:          0       2       0       0       0
   754 ;;      Totals:         0      14       0       0       0
   755 ;;Total ram usage:       14 bytes
   756 ;; Hardware stack levels required when called:    7
   757 ;; This function calls:
   758 ;;		_DELAY_sec
   759 ;;		_EEPROM_ReadNBytes
   760 ;;		_EEPROM_WriteNBytes
   761 ;;		_LCD_Clear
   762 ;;		_LCD_DisplayString
   763 ;;		_LCD_GoToLine
   764 ;;		_LCD_Init
   765 ;;		_LCD_Printf
   766 ;; This function is called by:
   767 ;;		Startup code after reset
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _main
   773  0554                     _main:	
   774                           
   775                           ;main.c: 18: uint16_t var_writeNumber_u16=12345, var_readNumber_u16;
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   779  0554  3039               	movlw	57
   780  0555  1283               	bcf	3,5	;RP0=0, select bank0
   781  0556  1303               	bcf	3,6	;RP1=0, select bank0
   782  0557  00DD               	movwf	main@var_writeNumber_u16
   783  0558  3030               	movlw	48
   784  0559  00DE               	movwf	main@var_writeNumber_u16+1
   785                           
   786                           ;main.c: 19: uint32_t var_writeNumber_u32=123456789, var_readNumber_u32;
   787  055A  3007               	movlw	7
   788  055B  00DC               	movwf	main@var_writeNumber_u32+3
   789  055C  305B               	movlw	91
   790  055D  00DB               	movwf	main@var_writeNumber_u32+2
   791  055E  30CD               	movlw	205
   792  055F  00DA               	movwf	main@var_writeNumber_u32+1
   793  0560  3015               	movlw	21
   794  0561  00D9               	movwf	main@var_writeNumber_u32
   795                           
   796                           ;main.c: 22: LCD_Init(8,2,16);
   797  0562  3002               	movlw	2
   798  0563  00D1               	movwf	??_main
   799  0564  0851               	movf	??_main,w
   800  0565  00F8               	movwf	LCD_Init@var_lcdNoOfLines_u8
   801  0566  3010               	movlw	16
   802  0567  00D2               	movwf	??_main+1
   803  0568  0852               	movf	??_main+1,w
   804  0569  00F9               	movwf	LCD_Init@var_MaxCharsPerLine_u8
   805  056A  3008               	movlw	8
   806  056B  120A  118A  23BB  120A  118A  	fcall	_LCD_Init
   807                           
   808                           ;main.c: 24: LCD_DisplayString("16-bit Number   read write");
   809  0570  301C               	movlw	(STR_1-__stringbase)& (0+255)
   810  0571  120A  118A  2233  120A  118A  	fcall	_LCD_DisplayString
   811                           
   812                           ;main.c: 25: DELAY_sec(2);
   813  0576  3002               	movlw	2
   814  0577  00F4               	movwf	DELAY_sec@sec_count
   815  0578  3000               	movlw	0
   816  0579  00F5               	movwf	DELAY_sec@sec_count+1
   817  057A  120A  118A  21AD  120A  118A  	fcall	_DELAY_sec
   818                           
   819                           ;main.c: 27: LCD_Clear();
   820  057F  120A  118A  217B  120A  118A  	fcall	_LCD_Clear
   821                           
   822                           ;main.c: 28: LCD_Printf("Wr:%u",var_writeNumber_u16);
   823  0584  1283               	bcf	3,5	;RP0=0, select bank0
   824  0585  1303               	bcf	3,6	;RP1=0, select bank0
   825  0586  085E               	movf	main@var_writeNumber_u16+1,w
   826  0587  01B7               	clrf	?_LCD_Printf+1
   827  0588  07B7               	addwf	?_LCD_Printf+1,f
   828  0589  085D               	movf	main@var_writeNumber_u16,w
   829  058A  01B6               	clrf	?_LCD_Printf
   830  058B  07B6               	addwf	?_LCD_Printf,f
   831  058C  3049               	movlw	(STR_2-__stringbase)& (0+255)
   832  058D  120A  118A  263B  120A  118A  	fcall	_LCD_Printf
   833                           
   834                           ;main.c: 29: EEPROM_WriteNBytes(50,&var_writeNumber_u16,sizeof(var_writeNumber_u16));
   835  0592  3032               	movlw	50
   836  0593  00F5               	movwf	EEPROM_WriteNBytes@var_eepromAddress_u16
   837  0594  3000               	movlw	0
   838  0595  00F6               	movwf	EEPROM_WriteNBytes@var_eepromAddress_u16+1
   839  0596  305D               	movlw	main@var_writeNumber_u16& (0+255)
   840  0597  1283               	bcf	3,5	;RP0=0, select bank0
   841  0598  1303               	bcf	3,6	;RP1=0, select bank0
   842  0599  00D1               	movwf	??_main
   843  059A  0851               	movf	??_main,w
   844  059B  00F7               	movwf	EEPROM_WriteNBytes@ptr_ramAddress_u8
   845  059C  3002               	movlw	2
   846  059D  00F8               	movwf	EEPROM_WriteNBytes@var_numOfBytes_u16
   847  059E  3000               	movlw	0
   848  059F  00F9               	movwf	EEPROM_WriteNBytes@var_numOfBytes_u16+1
   849  05A0  120A  118A  22D9  120A  118A  	fcall	_EEPROM_WriteNBytes
   850                           
   851                           ;main.c: 31: LCD_GoToLine(2);
   852  05A5  3002               	movlw	2
   853  05A6  120A  118A  21C1  120A  118A  	fcall	_LCD_GoToLine
   854                           
   855                           ;main.c: 32: EEPROM_ReadNBytes(50,&var_readNumber_u16,sizeof(var_readNumber_u16));
   856  05AB  3032               	movlw	50
   857  05AC  00F4               	movwf	EEPROM_ReadNBytes@var_eepromAddress_16
   858  05AD  3000               	movlw	0
   859  05AE  00F5               	movwf	EEPROM_ReadNBytes@var_eepromAddress_16+1
   860  05AF  3057               	movlw	main@var_readNumber_u16& (0+255)
   861  05B0  1283               	bcf	3,5	;RP0=0, select bank0
   862  05B1  1303               	bcf	3,6	;RP1=0, select bank0
   863  05B2  00D1               	movwf	??_main
   864  05B3  0851               	movf	??_main,w
   865  05B4  00F6               	movwf	EEPROM_ReadNBytes@ptr_ramAddress_u8
   866  05B5  3002               	movlw	2
   867  05B6  00F7               	movwf	EEPROM_ReadNBytes@var_numOfBytes_u16
   868  05B7  3000               	movlw	0
   869  05B8  00F8               	movwf	EEPROM_ReadNBytes@var_numOfBytes_u16+1
   870  05B9  120A  118A  228D  120A  118A  	fcall	_EEPROM_ReadNBytes
   871                           
   872                           ;main.c: 33: LCD_Printf("Rd:%u",var_writeNumber_u16);
   873  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   874  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   875  05C0  085E               	movf	main@var_writeNumber_u16+1,w
   876  05C1  01B7               	clrf	?_LCD_Printf+1
   877  05C2  07B7               	addwf	?_LCD_Printf+1,f
   878  05C3  085D               	movf	main@var_writeNumber_u16,w
   879  05C4  01B6               	clrf	?_LCD_Printf
   880  05C5  07B6               	addwf	?_LCD_Printf,f
   881  05C6  3043               	movlw	(STR_3-__stringbase)& (0+255)
   882  05C7  120A  118A  263B  120A  118A  	fcall	_LCD_Printf
   883                           
   884                           ;main.c: 35: DELAY_sec(2);
   885  05CC  3002               	movlw	2
   886  05CD  00F4               	movwf	DELAY_sec@sec_count
   887  05CE  3000               	movlw	0
   888  05CF  00F5               	movwf	DELAY_sec@sec_count+1
   889  05D0  120A  118A  21AD  120A  118A  	fcall	_DELAY_sec
   890                           
   891                           ;main.c: 36: LCD_Clear();
   892  05D5  120A  118A  217B  120A  118A  	fcall	_LCD_Clear
   893                           
   894                           ;main.c: 38: LCD_DisplayString("32-bit Number   read write");
   895  05DA  3001               	movlw	(STR_4-__stringbase)& (0+255)
   896  05DB  120A  118A  2233  120A  118A  	fcall	_LCD_DisplayString
   897                           
   898                           ;main.c: 39: DELAY_sec(2);
   899  05E0  3002               	movlw	2
   900  05E1  00F4               	movwf	DELAY_sec@sec_count
   901  05E2  3000               	movlw	0
   902  05E3  00F5               	movwf	DELAY_sec@sec_count+1
   903  05E4  120A  118A  21AD  120A  118A  	fcall	_DELAY_sec
   904                           
   905                           ;main.c: 41: LCD_Clear();
   906  05E9  120A  118A  217B  120A  118A  	fcall	_LCD_Clear
   907                           
   908                           ;main.c: 42: LCD_Printf("Wr:%U",var_writeNumber_u32);
   909  05EE  1283               	bcf	3,5	;RP0=0, select bank0
   910  05EF  1303               	bcf	3,6	;RP1=0, select bank0
   911  05F0  085C               	movf	main@var_writeNumber_u32+3,w
   912  05F1  00B9               	movwf	?_LCD_Printf+3
   913  05F2  085B               	movf	main@var_writeNumber_u32+2,w
   914  05F3  00B8               	movwf	?_LCD_Printf+2
   915  05F4  085A               	movf	main@var_writeNumber_u32+1,w
   916  05F5  00B7               	movwf	?_LCD_Printf+1
   917  05F6  0859               	movf	main@var_writeNumber_u32,w
   918  05F7  00B6               	movwf	?_LCD_Printf
   919  05F8  303D               	movlw	(STR_5-__stringbase)& (0+255)
   920  05F9  120A  118A  263B  120A  118A  	fcall	_LCD_Printf
   921                           
   922                           ;main.c: 43: EEPROM_WriteNBytes(100,&var_writeNumber_u32,sizeof(var_writeNumber_u32));
   923  05FE  3064               	movlw	100
   924  05FF  00F5               	movwf	EEPROM_WriteNBytes@var_eepromAddress_u16
   925  0600  3000               	movlw	0
   926  0601  00F6               	movwf	EEPROM_WriteNBytes@var_eepromAddress_u16+1
   927  0602  3059               	movlw	main@var_writeNumber_u32& (0+255)
   928  0603  1283               	bcf	3,5	;RP0=0, select bank0
   929  0604  1303               	bcf	3,6	;RP1=0, select bank0
   930  0605  00D1               	movwf	??_main
   931  0606  0851               	movf	??_main,w
   932  0607  00F7               	movwf	EEPROM_WriteNBytes@ptr_ramAddress_u8
   933  0608  3004               	movlw	4
   934  0609  00F8               	movwf	EEPROM_WriteNBytes@var_numOfBytes_u16
   935  060A  3000               	movlw	0
   936  060B  00F9               	movwf	EEPROM_WriteNBytes@var_numOfBytes_u16+1
   937  060C  120A  118A  22D9  120A  118A  	fcall	_EEPROM_WriteNBytes
   938                           
   939                           ;main.c: 45: LCD_GoToLine(2);
   940  0611  3002               	movlw	2
   941  0612  120A  118A  21C1  120A  118A  	fcall	_LCD_GoToLine
   942                           
   943                           ;main.c: 46: EEPROM_ReadNBytes(100,&var_readNumber_u32,sizeof(var_readNumber_u32));
   944  0617  3064               	movlw	100
   945  0618  00F4               	movwf	EEPROM_ReadNBytes@var_eepromAddress_16
   946  0619  3000               	movlw	0
   947  061A  00F5               	movwf	EEPROM_ReadNBytes@var_eepromAddress_16+1
   948  061B  3053               	movlw	main@var_readNumber_u32& (0+255)
   949  061C  1283               	bcf	3,5	;RP0=0, select bank0
   950  061D  1303               	bcf	3,6	;RP1=0, select bank0
   951  061E  00D1               	movwf	??_main
   952  061F  0851               	movf	??_main,w
   953  0620  00F6               	movwf	EEPROM_ReadNBytes@ptr_ramAddress_u8
   954  0621  3004               	movlw	4
   955  0622  00F7               	movwf	EEPROM_ReadNBytes@var_numOfBytes_u16
   956  0623  3000               	movlw	0
   957  0624  00F8               	movwf	EEPROM_ReadNBytes@var_numOfBytes_u16+1
   958  0625  120A  118A  228D  120A  118A  	fcall	_EEPROM_ReadNBytes
   959                           
   960                           ;main.c: 47: LCD_Printf("Rd:%U",var_writeNumber_u32);
   961  062A  1283               	bcf	3,5	;RP0=0, select bank0
   962  062B  1303               	bcf	3,6	;RP1=0, select bank0
   963  062C  085C               	movf	main@var_writeNumber_u32+3,w
   964  062D  00B9               	movwf	?_LCD_Printf+3
   965  062E  085B               	movf	main@var_writeNumber_u32+2,w
   966  062F  00B8               	movwf	?_LCD_Printf+2
   967  0630  085A               	movf	main@var_writeNumber_u32+1,w
   968  0631  00B7               	movwf	?_LCD_Printf+1
   969  0632  0859               	movf	main@var_writeNumber_u32,w
   970  0633  00B6               	movwf	?_LCD_Printf
   971  0634  3037               	movlw	(STR_6-__stringbase)& (0+255)
   972  0635  120A  118A  263B  120A  118A  	fcall	_LCD_Printf
   973  063A                     l258:	
   974                           ;main.c: 50: while(1);
   975                           
   976  063A  2E3A               	goto	l258
   977  063B                     __end_of_main:	
   978                           
   979                           	psect	text1
   980  063B                     __ptext1:	
   981 ;; *************** function _LCD_Printf *****************
   982 ;; Defined at:
   983 ;;		line 673 in file "lcd.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  argList         1    wreg     PTR const unsigned char 
   986 ;;		 -> STR_6(6), STR_5(6), STR_3(6), STR_2(6), 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  argList         1   38[BANK0 ] PTR const unsigned char 
   989 ;;		 -> STR_6(6), STR_5(6), STR_3(6), STR_2(6), 
   990 ;;  var_num_s32     4   39[BANK0 ] long 
   991 ;;  var_num_u32     4   32[BANK0 ] unsigned long 
   992 ;;  var_floatNum    3   28[BANK0 ] unsigned long 
   993 ;;  var_num_s16     2   43[BANK0 ] int 
   994 ;;  var_num_u16     2   36[BANK0 ] unsigned int 
   995 ;;  argp            1   48[BANK0 ] PTR void [1]
   996 ;;		 -> ?_LCD_Printf(0), 
   997 ;;  ch              1   47[BANK0 ] unsigned char 
   998 ;;  var_numOfDig    1   46[BANK0 ] unsigned char 
   999 ;;  ptr             1   45[BANK0 ] PTR const unsigned char 
  1000 ;;		 -> STR_6(6), STR_5(6), STR_3(6), STR_2(6), 
  1001 ;;  str             1   31[BANK0 ] PTR unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;		None               void
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       4       0       0       0
  1012 ;;      Locals:         0      21       0       0       0
  1013 ;;      Temps:          0       2       0       0       0
  1014 ;;      Totals:         0      27       0       0       0
  1015 ;;Total ram usage:       27 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    6
  1018 ;; This function calls:
  1019 ;;		_LCD_DisplayChar
  1020 ;;		_LCD_DisplayDecimalNumber
  1021 ;;		_LCD_DisplayString
  1022 ;;		___bmul
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _LCD_Printf
  1030  063B                     _LCD_Printf:	
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _LCD_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1034                           ;LCD_Printf@argList stored from wreg
  1035  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  063D  00C6               	movwf	LCD_Printf@argList
  1038                           
  1039                           ;lcd.c: 675: const char *ptr;
  1040                           ;lcd.c: 676: double var_floatNum_f32;
  1041                           ;lcd.c: 677: va_list argp;
  1042                           ;lcd.c: 678: sint16_t var_num_s16;
  1043                           ;lcd.c: 679: sint32_t var_num_s32;
  1044                           ;lcd.c: 680: uint16_t var_num_u16;
  1045                           ;lcd.c: 681: uint32_t var_num_u32;
  1046                           ;lcd.c: 682: char *str;
  1047                           ;lcd.c: 683: char ch;
  1048                           ;lcd.c: 684: uint8_t var_numOfDigitsToDisp_u8;
  1049                           ;lcd.c: 686: *argp = __va_start();
  1050  063E  3036               	movlw	?_LCD_Printf& (0+255)
  1051  063F  00BA               	movwf	??_LCD_Printf
  1052  0640  083A               	movf	??_LCD_Printf,w
  1053  0641  00D0               	movwf	LCD_Printf@argp
  1054                           
  1055                           ;lcd.c: 689: for(ptr = argList; *ptr != '\0'; ptr++)
  1056  0642  0846               	movf	LCD_Printf@argList,w
  1057  0643  00BA               	movwf	??_LCD_Printf
  1058  0644  083A               	movf	??_LCD_Printf,w
  1059  0645  00CD               	movwf	LCD_Printf@ptr
  1060  0646                     l1604:	
  1061  0646  084D               	movf	LCD_Printf@ptr,w
  1062  0647  0084               	movwf	4
  1063  0648  120A  118A  2003  120A  118A  	fcall	stringdir
  1064  064D  3800               	iorlw	0
  1065  064E  1903               	btfsc	3,2
  1066  064F  0008               	return
  1067                           
  1068                           ;lcd.c: 690: {
  1069                           ;lcd.c: 692: ch= *ptr;
  1070  0650  084D               	movf	LCD_Printf@ptr,w
  1071  0651  0084               	movwf	4
  1072  0652  120A  118A  2003  120A  118A  	fcall	stringdir
  1073  0657  00BA               	movwf	??_LCD_Printf
  1074  0658  083A               	movf	??_LCD_Printf,w
  1075  0659  00CF               	movwf	LCD_Printf@ch
  1076                           
  1077                           ;lcd.c: 693: if(ch == '%')
  1078  065A  084F               	movf	LCD_Printf@ch,w
  1079  065B  3A25               	xorlw	37
  1080  065C  1D03               	skipz
  1081  065D  2FD1               	goto	l1600
  1082                           
  1083                           ;lcd.c: 694: {
  1084                           ;lcd.c: 695: ptr++;
  1085  065E  3001               	movlw	1
  1086  065F  00BA               	movwf	??_LCD_Printf
  1087  0660  083A               	movf	??_LCD_Printf,w
  1088  0661  07CD               	addwf	LCD_Printf@ptr,f
  1089                           
  1090                           ;lcd.c: 696: ch = *ptr;
  1091  0662  084D               	movf	LCD_Printf@ptr,w
  1092  0663  0084               	movwf	4
  1093  0664  120A  118A  2003  120A  118A  	fcall	stringdir
  1094  0669  00BA               	movwf	??_LCD_Printf
  1095  066A  083A               	movf	??_LCD_Printf,w
  1096  066B  00CF               	movwf	LCD_Printf@ch
  1097                           
  1098                           ;lcd.c: 697: if((ch>=0x30) && (ch<=0x39))
  1099  066C  3030               	movlw	48
  1100  066D  024F               	subwf	LCD_Printf@ch,w
  1101  066E  1C03               	skipc
  1102  066F  2E9D               	goto	l1526
  1103  0670  303A               	movlw	58
  1104  0671  024F               	subwf	LCD_Printf@ch,w
  1105  0672  1803               	skipnc
  1106  0673  2E9D               	goto	l1526
  1107                           
  1108                           ;lcd.c: 698: {
  1109                           ;lcd.c: 699: var_numOfDigitsToDisp_u8 = 0;
  1110  0674  01CE               	clrf	LCD_Printf@var_numOfDigitsToDisp_u8
  1111  0675                     l1522:	
  1112                           ;lcd.c: 700: while((ch>=0x30) && (ch<=0x39))
  1113                           
  1114  0675  3030               	movlw	48
  1115  0676  024F               	subwf	LCD_Printf@ch,w
  1116  0677  1C03               	skipc
  1117  0678  2F9F               	goto	l1598
  1118  0679  303A               	movlw	58
  1119  067A  024F               	subwf	LCD_Printf@ch,w
  1120  067B  1803               	btfsc	3,0
  1121  067C  2F9F               	goto	l1598
  1122                           
  1123                           ;lcd.c: 701: {
  1124                           ;lcd.c: 702: var_numOfDigitsToDisp_u8 = (var_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1125  067D  300A               	movlw	10
  1126  067E  00BA               	movwf	??_LCD_Printf
  1127  067F  083A               	movf	??_LCD_Printf,w
  1128  0680  00A0               	movwf	___bmul@multiplicand
  1129  0681  084E               	movf	LCD_Printf@var_numOfDigitsToDisp_u8,w
  1130  0682  120A  118A  2186  120A  118A  	fcall	___bmul
  1131  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0689  074F               	addwf	LCD_Printf@ch,w
  1134  068A  3ED0               	addlw	208
  1135  068B  00BB               	movwf	??_LCD_Printf+1
  1136  068C  083B               	movf	??_LCD_Printf+1,w
  1137  068D  00CE               	movwf	LCD_Printf@var_numOfDigitsToDisp_u8
  1138                           
  1139                           ;lcd.c: 703: ptr++;
  1140  068E  3001               	movlw	1
  1141  068F  00BA               	movwf	??_LCD_Printf
  1142  0690  083A               	movf	??_LCD_Printf,w
  1143  0691  07CD               	addwf	LCD_Printf@ptr,f
  1144                           
  1145                           ;lcd.c: 704: ch = *ptr;
  1146  0692  084D               	movf	LCD_Printf@ptr,w
  1147  0693  0084               	movwf	4
  1148  0694  120A  118A  2003  120A  118A  	fcall	stringdir
  1149  0699  00BA               	movwf	??_LCD_Printf
  1150  069A  083A               	movf	??_LCD_Printf,w
  1151  069B  00CF               	movwf	LCD_Printf@ch
  1152  069C  2E75               	goto	l1522
  1153  069D                     l1526:	
  1154                           ;lcd.c: 705: }
  1155                           ;lcd.c: 706: }
  1156                           
  1157                           
  1158                           ;lcd.c: 707: else
  1159                           ;lcd.c: 708: {
  1160                           ;lcd.c: 709: var_numOfDigitsToDisp_u8 = 0xffu;
  1161  069D  30FF               	movlw	255
  1162  069E  00BA               	movwf	??_LCD_Printf
  1163  069F  083A               	movf	??_LCD_Printf,w
  1164  06A0  00CE               	movwf	LCD_Printf@var_numOfDigitsToDisp_u8
  1165                           
  1166                           ;lcd.c: 710: }
  1167                           ;lcd.c: 713: switch(ch)
  1168  06A1  2F9F               	goto	l1598
  1169  06A2                     l1528:	
  1170                           ;lcd.c: 714: {
  1171                           ;lcd.c: 715: case 'C':
  1172                           
  1173                           
  1174                           ;lcd.c: 716: case 'c':
  1175                           ;lcd.c: 717: ch = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1176  06A2  0850               	movf	LCD_Printf@argp,w
  1177  06A3  0084               	movwf	4
  1178  06A4  1383               	bcf	3,7	;select IRP bank0
  1179  06A5  0800               	movf	0,w
  1180  06A6  00BA               	movwf	??_LCD_Printf
  1181  06A7  083A               	movf	??_LCD_Printf,w
  1182  06A8  00CF               	movwf	LCD_Printf@ch
  1183  06A9  3002               	movlw	2
  1184  06AA  00BA               	movwf	??_LCD_Printf
  1185  06AB  083A               	movf	??_LCD_Printf,w
  1186  06AC  07D0               	addwf	LCD_Printf@argp,f
  1187  06AD  2FD1               	goto	l1600
  1188  06AE                     l1534:	
  1189                           ;lcd.c: 721: case 'd':
  1190                           
  1191                           ;lcd.c: 719: break;
  1192                           
  1193                           ;lcd.c: 718: LCD_DisplayChar(ch);
  1194                           
  1195                           
  1196                           ;lcd.c: 722: var_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
  1197  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1198  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1199  06B0  0850               	movf	LCD_Printf@argp,w
  1200  06B1  0084               	movwf	4
  1201  06B2  1383               	bcf	3,7	;select IRP bank0
  1202  06B3  0800               	movf	0,w
  1203  06B4  00CB               	movwf	LCD_Printf@var_num_s16
  1204  06B5  0A84               	incf	4,f
  1205  06B6  0800               	movf	0,w
  1206  06B7  00CC               	movwf	LCD_Printf@var_num_s16+1
  1207  06B8  3002               	movlw	2
  1208  06B9  00BA               	movwf	??_LCD_Printf
  1209  06BA  083A               	movf	??_LCD_Printf,w
  1210  06BB  07D0               	addwf	LCD_Printf@argp,f
  1211                           
  1212                           ;lcd.c: 724: if(var_num_s16<0)
  1213  06BC  1FCC               	btfss	LCD_Printf@var_num_s16+1,7
  1214  06BD  2EC9               	goto	l1544
  1215                           
  1216                           ;lcd.c: 725: {
  1217                           ;lcd.c: 726: var_num_s16 = -var_num_s16;
  1218  06BE  09CB               	comf	LCD_Printf@var_num_s16,f
  1219  06BF  09CC               	comf	LCD_Printf@var_num_s16+1,f
  1220  06C0  0ACB               	incf	LCD_Printf@var_num_s16,f
  1221  06C1  1903               	skipnz
  1222  06C2  0ACC               	incf	LCD_Printf@var_num_s16+1,f
  1223                           
  1224                           ;lcd.c: 727: LCD_DisplayChar('-');
  1225  06C3  302D               	movlw	45
  1226  06C4  120A  118A  226E  120A  118A  	fcall	_LCD_DisplayChar
  1227  06C9                     l1544:	
  1228                           
  1229                           ;lcd.c: 728: }
  1230                           ;lcd.c: 729: LCD_DisplayDecimalNumber(var_num_s16,var_numOfDigitsToDisp_u8);
  1231  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1232  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1233  06CB  084B               	movf	LCD_Printf@var_num_s16,w
  1234  06CC  00A4               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32
  1235  06CD  084C               	movf	LCD_Printf@var_num_s16+1,w
  1236  06CE  00A5               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1
  1237  06CF  3000               	movlw	0
  1238  06D0  1BA5               	btfsc	LCD_DisplayDecimalNumber@var_DecNumber_u32+1,7
  1239  06D1  30FF               	movlw	255
  1240  06D2  00A6               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2
  1241  06D3  00A7               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3
  1242  06D4  084E               	movf	LCD_Printf@var_numOfDigitsToDisp_u8,w
  1243  06D5  00BA               	movwf	??_LCD_Printf
  1244  06D6  083A               	movf	??_LCD_Printf,w
  1245  06D7  00A8               	movwf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8
  1246  06D8  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayDecimalNumber
  1247                           
  1248                           ;lcd.c: 731: break;
  1249  06DD  2FD7               	goto	l1602
  1250  06DE                     l1546:	
  1251                           ;lcd.c: 733: case 'D':
  1252                           
  1253                           
  1254                           ;lcd.c: 734: var_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1255  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1256  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1257  06E0  0850               	movf	LCD_Printf@argp,w
  1258  06E1  0084               	movwf	4
  1259  06E2  1383               	bcf	3,7	;select IRP bank0
  1260  06E3  0800               	movf	0,w
  1261  06E4  00C7               	movwf	LCD_Printf@var_num_s32
  1262  06E5  0A84               	incf	4,f
  1263  06E6  0800               	movf	0,w
  1264  06E7  00C8               	movwf	LCD_Printf@var_num_s32+1
  1265  06E8  0A84               	incf	4,f
  1266  06E9  0800               	movf	0,w
  1267  06EA  00C9               	movwf	LCD_Printf@var_num_s32+2
  1268  06EB  0A84               	incf	4,f
  1269  06EC  0800               	movf	0,w
  1270  06ED  00CA               	movwf	LCD_Printf@var_num_s32+3
  1271  06EE  3004               	movlw	4
  1272  06EF  00BA               	movwf	??_LCD_Printf
  1273  06F0  083A               	movf	??_LCD_Printf,w
  1274  06F1  07D0               	addwf	LCD_Printf@argp,f
  1275                           
  1276                           ;lcd.c: 736: if(var_num_s32<0)
  1277  06F2  1FCA               	btfss	LCD_Printf@var_num_s32+3,7
  1278  06F3  2F05               	goto	l177
  1279                           
  1280                           ;lcd.c: 737: {
  1281                           ;lcd.c: 738: var_num_s32 = -var_num_s32;
  1282  06F4  09C7               	comf	LCD_Printf@var_num_s32,f
  1283  06F5  09C8               	comf	LCD_Printf@var_num_s32+1,f
  1284  06F6  09C9               	comf	LCD_Printf@var_num_s32+2,f
  1285  06F7  09CA               	comf	LCD_Printf@var_num_s32+3,f
  1286  06F8  0AC7               	incf	LCD_Printf@var_num_s32,f
  1287  06F9  1903               	skipnz
  1288  06FA  0AC8               	incf	LCD_Printf@var_num_s32+1,f
  1289  06FB  1903               	skipnz
  1290  06FC  0AC9               	incf	LCD_Printf@var_num_s32+2,f
  1291  06FD  1903               	skipnz
  1292  06FE  0ACA               	incf	LCD_Printf@var_num_s32+3,f
  1293                           
  1294                           ;lcd.c: 739: LCD_DisplayChar('-');
  1295  06FF  302D               	movlw	45
  1296  0700  120A  118A  226E  120A  118A  	fcall	_LCD_DisplayChar
  1297  0705                     l177:	
  1298                           
  1299                           ;lcd.c: 740: }
  1300                           ;lcd.c: 741: LCD_DisplayDecimalNumber(var_num_s32,var_numOfDigitsToDisp_u8);
  1301  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0707  084A               	movf	LCD_Printf@var_num_s32+3,w
  1304  0708  00A7               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3
  1305  0709  0849               	movf	LCD_Printf@var_num_s32+2,w
  1306  070A  00A6               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2
  1307  070B  0848               	movf	LCD_Printf@var_num_s32+1,w
  1308  070C  00A5               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1
  1309  070D  0847               	movf	LCD_Printf@var_num_s32,w
  1310  070E  00A4               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32
  1311  070F  084E               	movf	LCD_Printf@var_numOfDigitsToDisp_u8,w
  1312  0710  00BA               	movwf	??_LCD_Printf
  1313  0711  083A               	movf	??_LCD_Printf,w
  1314  0712  00A8               	movwf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8
  1315  0713  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayDecimalNumber
  1316                           
  1317                           ;lcd.c: 743: break;
  1318  0718  2FD7               	goto	l1602
  1319  0719                     l1556:	
  1320                           ;lcd.c: 745: case 'u':
  1321                           
  1322                           
  1323                           ;lcd.c: 746: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1324  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1325  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1326  071B  0850               	movf	LCD_Printf@argp,w
  1327  071C  0084               	movwf	4
  1328  071D  1383               	bcf	3,7	;select IRP bank0
  1329  071E  0800               	movf	0,w
  1330  071F  00C4               	movwf	LCD_Printf@var_num_u16
  1331  0720  0A84               	incf	4,f
  1332  0721  0800               	movf	0,w
  1333  0722  00C5               	movwf	LCD_Printf@var_num_u16+1
  1334  0723  3002               	movlw	2
  1335  0724  00BA               	movwf	??_LCD_Printf
  1336  0725  083A               	movf	??_LCD_Printf,w
  1337  0726  07D0               	addwf	LCD_Printf@argp,f
  1338                           
  1339                           ;lcd.c: 748: LCD_DisplayDecimalNumber(var_num_u16,var_numOfDigitsToDisp_u8);
  1340  0727  0844               	movf	LCD_Printf@var_num_u16,w
  1341  0728  00A4               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32
  1342  0729  0845               	movf	LCD_Printf@var_num_u16+1,w
  1343  072A  00A5               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1
  1344  072B  01A6               	clrf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2
  1345  072C  01A7               	clrf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3
  1346  072D  084E               	movf	LCD_Printf@var_numOfDigitsToDisp_u8,w
  1347  072E  00BA               	movwf	??_LCD_Printf
  1348  072F  083A               	movf	??_LCD_Printf,w
  1349  0730  00A8               	movwf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8
  1350  0731  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayDecimalNumber
  1351                           
  1352                           ;lcd.c: 750: break;
  1353  0736  2FD7               	goto	l1602
  1354  0737                     l1562:	
  1355                           ;lcd.c: 752: case 'U':
  1356                           
  1357                           
  1358                           ;lcd.c: 753: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1359  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0739  0850               	movf	LCD_Printf@argp,w
  1362  073A  0084               	movwf	4
  1363  073B  1383               	bcf	3,7	;select IRP bank0
  1364  073C  0800               	movf	0,w
  1365  073D  00C0               	movwf	LCD_Printf@var_num_u32
  1366  073E  0A84               	incf	4,f
  1367  073F  0800               	movf	0,w
  1368  0740  00C1               	movwf	LCD_Printf@var_num_u32+1
  1369  0741  0A84               	incf	4,f
  1370  0742  0800               	movf	0,w
  1371  0743  00C2               	movwf	LCD_Printf@var_num_u32+2
  1372  0744  0A84               	incf	4,f
  1373  0745  0800               	movf	0,w
  1374  0746  00C3               	movwf	LCD_Printf@var_num_u32+3
  1375  0747  3004               	movlw	4
  1376  0748  00BA               	movwf	??_LCD_Printf
  1377  0749  083A               	movf	??_LCD_Printf,w
  1378  074A  07D0               	addwf	LCD_Printf@argp,f
  1379                           
  1380                           ;lcd.c: 755: LCD_DisplayDecimalNumber(var_num_u32,var_numOfDigitsToDisp_u8);
  1381  074B  0843               	movf	LCD_Printf@var_num_u32+3,w
  1382  074C  00A7               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3
  1383  074D  0842               	movf	LCD_Printf@var_num_u32+2,w
  1384  074E  00A6               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2
  1385  074F  0841               	movf	LCD_Printf@var_num_u32+1,w
  1386  0750  00A5               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1
  1387  0751  0840               	movf	LCD_Printf@var_num_u32,w
  1388  0752  00A4               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32
  1389  0753  084E               	movf	LCD_Printf@var_numOfDigitsToDisp_u8,w
  1390  0754  00BA               	movwf	??_LCD_Printf
  1391  0755  083A               	movf	??_LCD_Printf,w
  1392  0756  00A8               	movwf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8
  1393  0757  120A  118A  24BC  120A  118A  	fcall	_LCD_DisplayDecimalNumber
  1394                           
  1395                           ;lcd.c: 757: break;
  1396  075C  2FD7               	goto	l1602
  1397  075D                     l1568:	
  1398                           ;lcd.c: 759: case 'x':
  1399                           
  1400                           
  1401                           ;lcd.c: 760: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1402  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1403  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1404  075F  2F61               	goto	l1576
  1405  0760                     l1572:	
  1406                           ;lcd.c: 766: case 'X':
  1407                           
  1408                           ;lcd.c: 764: break;
  1409                           
  1410  0760  2F6B               	goto	l1580
  1411  0761                     l1576:	
  1412                           ;lcd.c: 774: case 'b':
  1413                           
  1414                           ;lcd.c: 771: break;
  1415                           
  1416                           ;lcd.c: 767: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1417                           
  1418                           
  1419                           ;lcd.c: 775: var_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1420  0761  0850               	movf	LCD_Printf@argp,w
  1421  0762  0084               	movwf	4
  1422  0763  1383               	bcf	3,7	;select IRP bank0
  1423  0764  0800               	movf	0,w
  1424  0765  00C4               	movwf	LCD_Printf@var_num_u16
  1425  0766  0A84               	incf	4,f
  1426  0767  0800               	movf	0,w
  1427  0768  00C5               	movwf	LCD_Printf@var_num_u16+1
  1428  0769  3002               	movlw	2
  1429  076A  2F87               	goto	L4
  1430  076B                     l1580:	
  1431                           ;lcd.c: 783: case 'B':
  1432                           
  1433                           ;lcd.c: 781: break;
  1434                           
  1435                           
  1436                           ;lcd.c: 784: var_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1437  076B  0850               	movf	LCD_Printf@argp,w
  1438  076C  0084               	movwf	4
  1439  076D  1383               	bcf	3,7	;select IRP bank0
  1440  076E  0800               	movf	0,w
  1441  076F  00C0               	movwf	LCD_Printf@var_num_u32
  1442  0770  0A84               	incf	4,f
  1443  0771  0800               	movf	0,w
  1444  0772  00C1               	movwf	LCD_Printf@var_num_u32+1
  1445  0773  0A84               	incf	4,f
  1446  0774  0800               	movf	0,w
  1447  0775  00C2               	movwf	LCD_Printf@var_num_u32+2
  1448  0776  0A84               	incf	4,f
  1449  0777  0800               	movf	0,w
  1450  0778  00C3               	movwf	LCD_Printf@var_num_u32+3
  1451  0779  3004               	movlw	4
  1452  077A  2F87               	goto	L4
  1453  077B                     l1584:	
  1454                           ;lcd.c: 793: case 'F':
  1455                           
  1456                           ;lcd.c: 790: break;
  1457                           
  1458                           
  1459                           ;lcd.c: 794: case 'f':
  1460                           ;lcd.c: 795: var_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1461  077B  0850               	movf	LCD_Printf@argp,w
  1462  077C  0084               	movwf	4
  1463  077D  1383               	bcf	3,7	;select IRP bank0
  1464  077E  0800               	movf	0,w
  1465  077F  00BC               	movwf	LCD_Printf@var_floatNum_f32
  1466  0780  0A84               	incf	4,f
  1467  0781  0800               	movf	0,w
  1468  0782  00BD               	movwf	LCD_Printf@var_floatNum_f32+1
  1469  0783  0A84               	incf	4,f
  1470  0784  0800               	movf	0,w
  1471  0785  00BE               	movwf	LCD_Printf@var_floatNum_f32+2
  1472  0786  3003               	movlw	3
  1473  0787                     L4:	
  1474  0787  00BA               	movwf	??_LCD_Printf
  1475  0788  083A               	movf	??_LCD_Printf,w
  1476  0789  07D0               	addwf	LCD_Printf@argp,f
  1477                           
  1478                           ;lcd.c: 799: break;
  1479  078A  2FD7               	goto	l1602
  1480  078B                     l1588:	
  1481                           ;lcd.c: 802: case 'S':
  1482                           
  1483                           
  1484                           ;lcd.c: 803: case 's':
  1485                           ;lcd.c: 804: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1486  078B  0850               	movf	LCD_Printf@argp,w
  1487  078C  0084               	movwf	4
  1488  078D  1383               	bcf	3,7	;select IRP bank0
  1489  078E  0800               	movf	0,w
  1490  078F  00BA               	movwf	??_LCD_Printf
  1491  0790  083A               	movf	??_LCD_Printf,w
  1492  0791  00BF               	movwf	LCD_Printf@str
  1493  0792  3001               	movlw	1
  1494  0793  00BA               	movwf	??_LCD_Printf
  1495  0794  083A               	movf	??_LCD_Printf,w
  1496  0795  07D0               	addwf	LCD_Printf@argp,f
  1497                           
  1498                           ;lcd.c: 806: LCD_DisplayString(str);
  1499  0796  083F               	movf	LCD_Printf@str,w
  1500  0797  120A  118A  2233  120A  118A  	fcall	_LCD_DisplayString
  1501                           
  1502                           ;lcd.c: 808: break;
  1503  079C  2FD7               	goto	l1602
  1504  079D                     l1594:	
  1505                           ;lcd.c: 810: case '%':
  1506                           
  1507                           
  1508                           ;lcd.c: 811: LCD_DisplayChar('%');
  1509  079D  3025               	movlw	37
  1510  079E  2FD2               	goto	L5
  1511  079F                     l1598:	
  1512                           ;lcd.c: 813: }
  1513                           
  1514                           ;lcd.c: 812: break;
  1515                           
  1516  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1517  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1518  07A1  084F               	movf	LCD_Printf@ch,w
  1519                           
  1520                           ; Switch size 1, requested type "space"
  1521                           ; Number of cases is 15, Range of values is 37 to 120
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte           46    24 (average)
  1525                           ; direct_byte          263    11 (fixed)
  1526                           ; jumptable            263     9 (fixed)
  1527                           ;	Chosen strategy is simple_byte
  1528  07A2  3A25               	xorlw	37	; case 37
  1529  07A3  1903               	skipnz
  1530  07A4  2F9D               	goto	l1594
  1531  07A5  3A67               	xorlw	103	; case 66
  1532  07A6  1903               	skipnz
  1533  07A7  2F6B               	goto	l1580
  1534  07A8  3A01               	xorlw	1	; case 67
  1535  07A9  1903               	skipnz
  1536  07AA  2EA2               	goto	l1528
  1537  07AB  3A07               	xorlw	7	; case 68
  1538  07AC  1903               	skipnz
  1539  07AD  2EDE               	goto	l1546
  1540  07AE  3A02               	xorlw	2	; case 70
  1541  07AF  1903               	skipnz
  1542  07B0  2F7B               	goto	l1584
  1543  07B1  3A15               	xorlw	21	; case 83
  1544  07B2  1903               	skipnz
  1545  07B3  2F8B               	goto	l1588
  1546  07B4  3A06               	xorlw	6	; case 85
  1547  07B5  1903               	skipnz
  1548  07B6  2F37               	goto	l1562
  1549  07B7  3A0D               	xorlw	13	; case 88
  1550  07B8  1903               	skipnz
  1551  07B9  2F60               	goto	l1572
  1552  07BA  3A3A               	xorlw	58	; case 98
  1553  07BB  1903               	skipnz
  1554  07BC  2F61               	goto	l1576
  1555  07BD  3A01               	xorlw	1	; case 99
  1556  07BE  1903               	skipnz
  1557  07BF  2EA2               	goto	l1528
  1558  07C0  3A07               	xorlw	7	; case 100
  1559  07C1  1903               	skipnz
  1560  07C2  2EAE               	goto	l1534
  1561  07C3  3A02               	xorlw	2	; case 102
  1562  07C4  1903               	skipnz
  1563  07C5  2F7B               	goto	l1584
  1564  07C6  3A15               	xorlw	21	; case 115
  1565  07C7  1903               	skipnz
  1566  07C8  2F8B               	goto	l1588
  1567  07C9  3A06               	xorlw	6	; case 117
  1568  07CA  1903               	skipnz
  1569  07CB  2F19               	goto	l1556
  1570  07CC  3A0D               	xorlw	13	; case 120
  1571  07CD  1903               	skipnz
  1572  07CE  2F5D               	goto	l1568
  1573  07CF  2FD7               	goto	l1602
  1574                           
  1575                           ;lcd.c: 814: }
  1576  07D0  2FD7               	goto	l1602
  1577  07D1                     l1600:	
  1578                           
  1579                           ;lcd.c: 815: else
  1580                           ;lcd.c: 816: {
  1581                           ;lcd.c: 818: LCD_DisplayChar(ch);
  1582  07D1  084F               	movf	LCD_Printf@ch,w
  1583  07D2                     L5:	
  1584  07D2  120A  118A  226E  120A  118A  	fcall	_LCD_DisplayChar
  1585  07D7                     l1602:	
  1586  07D7  3001               	movlw	1
  1587  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1588  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1589  07DA  00BA               	movwf	??_LCD_Printf
  1590  07DB  083A               	movf	??_LCD_Printf,w
  1591  07DC  07CD               	addwf	LCD_Printf@ptr,f
  1592  07DD  2E46               	goto	l1604
  1593  07DE                     __end_of_LCD_Printf:	
  1594                           
  1595                           	psect	text2
  1596  0233                     __ptext2:	
  1597 ;; *************** function _LCD_DisplayString *****************
  1598 ;; Defined at:
  1599 ;;		line 344 in file "lcd.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  ptr_stringPo    1    wreg     PTR unsigned char 
  1602 ;;		 -> STR_4(27), STR_1(27), 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  ptr_stringPo    1   10[COMMON] PTR unsigned char 
  1605 ;;		 -> STR_4(27), STR_1(27), 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0
  1617 ;;      Temps:          1       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    5
  1622 ;; This function calls:
  1623 ;;		_LCD_DisplayChar
  1624 ;; This function is called by:
  1625 ;;		_LCD_Printf
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _LCD_DisplayString
  1632  0233                     _LCD_DisplayString:	
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1636                           ;LCD_DisplayString@ptr_stringPointer_u8 stored from wreg
  1637  0233  00FA               	movwf	LCD_DisplayString@ptr_stringPointer_u8
  1638  0234                     l1402:	
  1639                           ;lcd.c: 346: while((*ptr_stringPointer_u8)!=0)
  1640                           
  1641  0234  087A               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1642  0235  0084               	movwf	4
  1643  0236  120A  118A  2003  120A  118A  	fcall	stringdir
  1644  023B  3800               	iorlw	0
  1645  023C  1903               	btfsc	3,2
  1646  023D  0008               	return
  1647                           
  1648                           ;lcd.c: 347: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1649  023E  087A               	movf	LCD_DisplayString@ptr_stringPointer_u8,w
  1650  023F  0084               	movwf	4
  1651  0240  120A  118A  2003  120A  118A  	fcall	stringdir
  1652  0245  120A  118A  226E  120A  118A  	fcall	_LCD_DisplayChar
  1653  024A  3001               	movlw	1
  1654  024B  00F9               	movwf	??_LCD_DisplayString
  1655  024C  0879               	movf	??_LCD_DisplayString,w
  1656  024D  07FA               	addwf	LCD_DisplayString@ptr_stringPointer_u8,f
  1657  024E  2A34               	goto	l1402
  1658  024F                     __end_of_LCD_DisplayString:	
  1659                           
  1660                           	psect	text3
  1661  04BC                     __ptext3:	
  1662 ;; *************** function _LCD_DisplayDecimalNumber *****************
  1663 ;; Defined at:
  1664 ;;		line 431 in file "lcd.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  var_DecNumbe    4    4[BANK0 ] unsigned long 
  1667 ;;  var_numOfDig    1    8[BANK0 ] unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  a              10   11[BANK0 ] unsigned char [10]
  1670 ;;  i               1   21[BANK0 ] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;		None               void
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       5       0       0       0
  1681 ;;      Locals:         0      11       0       0       0
  1682 ;;      Temps:          0       2       0       0       0
  1683 ;;      Totals:         0      18       0       0       0
  1684 ;;Total ram usage:       18 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    5
  1687 ;; This function calls:
  1688 ;;		_LCD_DisplayChar
  1689 ;;		___bmul
  1690 ;;		___lldiv
  1691 ;; This function is called by:
  1692 ;;		_LCD_Printf
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _LCD_DisplayDecimalNumber
  1698  04BC                     _LCD_DisplayDecimalNumber:	
  1699                           
  1700                           ;lcd.c: 433: uint8_t i=0,a[10];
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _LCD_DisplayDecimalNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1704  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1705  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1706  04BE  01B5               	clrf	LCD_DisplayDecimalNumber@i
  1707                           
  1708                           ;lcd.c: 435: if(var_DecNumber_u32==0)
  1709  04BF  0827               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3,w
  1710  04C0  0426               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2,w
  1711  04C1  0425               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1,w
  1712  04C2  0424               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32,w
  1713  04C3  1D03               	skipz
  1714  04C4  2CD8               	goto	l1418
  1715                           
  1716                           ;lcd.c: 436: {
  1717                           ;lcd.c: 438: for(i=0;((i<var_numOfDigitsToDisplay_u8) && (i<10u));i++)
  1718  04C5  01B5               	clrf	LCD_DisplayDecimalNumber@i
  1719  04C6                     l1414:	
  1720  04C6  0828               	movf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8,w
  1721  04C7  0235               	subwf	LCD_DisplayDecimalNumber@i,w
  1722  04C8  1803               	skipnc
  1723  04C9  2D50               	goto	l1442
  1724  04CA  300A               	movlw	10
  1725  04CB  0235               	subwf	LCD_DisplayDecimalNumber@i,w
  1726  04CC  1803               	btfsc	3,0
  1727  04CD  2D50               	goto	l1442
  1728                           
  1729                           ;lcd.c: 439: a[i] = 0x00;
  1730  04CE  0835               	movf	LCD_DisplayDecimalNumber@i,w
  1731  04CF  3E2B               	addlw	LCD_DisplayDecimalNumber@a& (0+255)
  1732  04D0  0084               	movwf	4
  1733  04D1  1383               	bcf	3,7	;select IRP bank0
  1734  04D2  0180               	clrf	0
  1735  04D3  3001               	movlw	1
  1736  04D4  00A9               	movwf	??_LCD_DisplayDecimalNumber
  1737  04D5  0829               	movf	??_LCD_DisplayDecimalNumber,w
  1738  04D6  07B5               	addwf	LCD_DisplayDecimalNumber@i,f
  1739  04D7  2CC6               	goto	l1414
  1740  04D8                     l1418:	
  1741                           ;lcd.c: 440: }
  1742                           
  1743                           
  1744                           ;lcd.c: 441: else
  1745                           ;lcd.c: 442: {
  1746                           ;lcd.c: 443: for(i=0;i<var_numOfDigitsToDisplay_u8;i++)
  1747  04D8  01B5               	clrf	LCD_DisplayDecimalNumber@i
  1748  04D9                     l1436:	
  1749  04D9  0828               	movf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8,w
  1750  04DA  0235               	subwf	LCD_DisplayDecimalNumber@i,w
  1751  04DB  1803               	btfsc	3,0
  1752  04DC  2D50               	goto	l1442
  1753                           
  1754                           ;lcd.c: 444: {
  1755                           ;lcd.c: 447: if(var_DecNumber_u32!=0)
  1756  04DD  0827               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3,w
  1757  04DE  0426               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2,w
  1758  04DF  0425               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1,w
  1759  04E0  0424               	iorwf	LCD_DisplayDecimalNumber@var_DecNumber_u32,w
  1760  04E1  1903               	skipnz
  1761  04E2  2D2E               	goto	l1426
  1762                           
  1763                           ;lcd.c: 448: {
  1764                           ;lcd.c: 453: a[i]=(uint32_t)(var_DecNumber_u32 - (10 * (uint32_t)(var_DecNumber_u32/10))
      +                          );
  1765  04E3  300A               	movlw	10
  1766  04E4  00A9               	movwf	??_LCD_DisplayDecimalNumber
  1767  04E5  0829               	movf	??_LCD_DisplayDecimalNumber,w
  1768  04E6  00A0               	movwf	___bmul@multiplicand
  1769  04E7  0827               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3,w
  1770  04E8  00F7               	movwf	___lldiv@dividend+3
  1771  04E9  0826               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2,w
  1772  04EA  00F6               	movwf	___lldiv@dividend+2
  1773  04EB  0825               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1,w
  1774  04EC  00F5               	movwf	___lldiv@dividend+1
  1775  04ED  0824               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32,w
  1776  04EE  00F4               	movwf	___lldiv@dividend
  1777  04EF  3000               	movlw	0
  1778  04F0  00F3               	movwf	___lldiv@divisor+3
  1779  04F1  3000               	movlw	0
  1780  04F2  00F2               	movwf	___lldiv@divisor+2
  1781  04F3  3000               	movlw	0
  1782  04F4  00F1               	movwf	___lldiv@divisor+1
  1783  04F5  300A               	movlw	10
  1784  04F6  00F0               	movwf	___lldiv@divisor
  1785  04F7  120A  118A  245E  120A  118A  	fcall	___lldiv
  1786  04FC  0870               	movf	?___lldiv,w
  1787  04FD  120A  118A  2186  120A  118A  	fcall	___bmul
  1788  0502  3AFF               	xorlw	255
  1789  0503  3E01               	addlw	1
  1790  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0506  0724               	addwf	LCD_DisplayDecimalNumber@var_DecNumber_u32,w
  1793  0507  00AA               	movwf	??_LCD_DisplayDecimalNumber+1
  1794  0508  0835               	movf	LCD_DisplayDecimalNumber@i,w
  1795  0509  3E2B               	addlw	LCD_DisplayDecimalNumber@a& (0+255)
  1796  050A  0084               	movwf	4
  1797  050B  082A               	movf	??_LCD_DisplayDecimalNumber+1,w
  1798  050C  1383               	bcf	3,7	;select IRP bank0
  1799  050D  0080               	movwf	0
  1800                           
  1801                           ;lcd.c: 454: var_DecNumber_u32=var_DecNumber_u32/10;
  1802  050E  3000               	movlw	0
  1803  050F  00F3               	movwf	___lldiv@divisor+3
  1804  0510  3000               	movlw	0
  1805  0511  00F2               	movwf	___lldiv@divisor+2
  1806  0512  3000               	movlw	0
  1807  0513  00F1               	movwf	___lldiv@divisor+1
  1808  0514  300A               	movlw	10
  1809  0515  00F0               	movwf	___lldiv@divisor
  1810  0516  0827               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3,w
  1811  0517  00F7               	movwf	___lldiv@dividend+3
  1812  0518  0826               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2,w
  1813  0519  00F6               	movwf	___lldiv@dividend+2
  1814  051A  0825               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1,w
  1815  051B  00F5               	movwf	___lldiv@dividend+1
  1816  051C  0824               	movf	LCD_DisplayDecimalNumber@var_DecNumber_u32,w
  1817  051D  00F4               	movwf	___lldiv@dividend
  1818  051E  120A  118A  245E  120A  118A  	fcall	___lldiv
  1819  0523  0873               	movf	?___lldiv+3,w
  1820  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0526  00A7               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+3
  1823  0527  0872               	movf	?___lldiv+2,w
  1824  0528  00A6               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+2
  1825  0529  0871               	movf	?___lldiv+1,w
  1826  052A  00A5               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32+1
  1827  052B  0870               	movf	?___lldiv,w
  1828  052C  00A4               	movwf	LCD_DisplayDecimalNumber@var_DecNumber_u32
  1829                           
  1830                           ;lcd.c: 455: }
  1831  052D  2D3B               	goto	l1434
  1832  052E                     l1426:	
  1833                           
  1834                           ;lcd.c: 456: else if( (var_numOfDigitsToDisplay_u8 == 0xffu) ||
  1835                           ;lcd.c: 457: (var_numOfDigitsToDisplay_u8 > 10u))
  1836  052E  0828               	movf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8,w
  1837  052F  3AFF               	xorlw	255
  1838  0530  1903               	skipnz
  1839  0531  2D50               	goto	l1442
  1840  0532  300B               	movlw	11
  1841  0533  0228               	subwf	LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8,w
  1842  0534  1803               	btfsc	3,0
  1843  0535  2D50               	goto	l1442
  1844                           
  1845                           ;lcd.c: 463: else
  1846                           ;lcd.c: 464: {
  1847                           ;lcd.c: 468: a[i]=0;
  1848                           
  1849                           ;lcd.c: 462: }
  1850                           
  1851                           ;lcd.c: 458: {
  1852                           ;lcd.c: 461: break;
  1853  0536  0835               	movf	LCD_DisplayDecimalNumber@i,w
  1854  0537  3E2B               	addlw	LCD_DisplayDecimalNumber@a& (0+255)
  1855  0538  0084               	movwf	4
  1856  0539  1383               	bcf	3,7	;select IRP bank0
  1857  053A  0180               	clrf	0
  1858  053B                     l1434:	
  1859  053B  3001               	movlw	1
  1860  053C  00A9               	movwf	??_LCD_DisplayDecimalNumber
  1861  053D  0829               	movf	??_LCD_DisplayDecimalNumber,w
  1862  053E  07B5               	addwf	LCD_DisplayDecimalNumber@i,f
  1863  053F  2CD9               	goto	l1436
  1864  0540                     l1438:	
  1865                           ;lcd.c: 469: }
  1866                           ;lcd.c: 470: }
  1867                           ;lcd.c: 471: }
  1868                           ;lcd.c: 474: while(i)
  1869                           
  1870                           
  1871                           ;lcd.c: 475: {
  1872                           ;lcd.c: 477: LCD_DisplayChar(((a[i-1])+0x30));
  1873  0540  0835               	movf	LCD_DisplayDecimalNumber@i,w
  1874  0541  3EFF               	addlw	255
  1875  0542  3E2B               	addlw	LCD_DisplayDecimalNumber@a& (0+255)
  1876  0543  0084               	movwf	4
  1877  0544  1383               	bcf	3,7	;select IRP bank0
  1878  0545  0800               	movf	0,w
  1879  0546  3E30               	addlw	48
  1880  0547  120A  118A  226E  120A  118A  	fcall	_LCD_DisplayChar
  1881                           
  1882                           ;lcd.c: 478: i--;
  1883  054C  3001               	movlw	1
  1884  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1885  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1886  054F  02B5               	subwf	LCD_DisplayDecimalNumber@i,f
  1887  0550                     l1442:	
  1888  0550  08B5               	movf	LCD_DisplayDecimalNumber@i,f
  1889  0551  1903               	btfsc	3,2
  1890  0552  0008               	return
  1891  0553  2D40               	goto	l1438
  1892  0554                     __end_of_LCD_DisplayDecimalNumber:	
  1893                           
  1894                           	psect	text4
  1895  045E                     __ptext4:	
  1896 ;; *************** function ___lldiv *****************
  1897 ;; Defined at:
  1898 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  divisor         4    0[COMMON] unsigned long 
  1901 ;;  dividend        4    4[COMMON] unsigned long 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  quotient        4    9[COMMON] unsigned long 
  1904 ;;  counter         1   13[COMMON] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  4    0[COMMON] unsigned long 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         8       0       0       0       0
  1915 ;;      Locals:         5       0       0       0       0
  1916 ;;      Temps:          1       0       0       0       0
  1917 ;;      Totals:        14       0       0       0       0
  1918 ;;Total ram usage:       14 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_LCD_DisplayDecimalNumber
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function ___lldiv
  1929  045E                     ___lldiv:	
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1933  045E  3000               	movlw	0
  1934  045F  00FC               	movwf	___lldiv@quotient+3
  1935  0460  3000               	movlw	0
  1936  0461  00FB               	movwf	___lldiv@quotient+2
  1937  0462  3000               	movlw	0
  1938  0463  00FA               	movwf	___lldiv@quotient+1
  1939  0464  3000               	movlw	0
  1940  0465  00F9               	movwf	___lldiv@quotient
  1941  0466  0873               	movf	___lldiv@divisor+3,w
  1942  0467  0472               	iorwf	___lldiv@divisor+2,w
  1943  0468  0471               	iorwf	___lldiv@divisor+1,w
  1944  0469  0470               	iorwf	___lldiv@divisor,w
  1945  046A  1903               	skipnz
  1946  046B  2CB3               	goto	l1358
  1947  046C  01FD               	clrf	___lldiv@counter
  1948  046D  0AFD               	incf	___lldiv@counter,f
  1949  046E                     l1344:	
  1950  046E  1BF3               	btfsc	___lldiv@divisor+3,7
  1951  046F  2C7E               	goto	l1346
  1952  0470  3001               	movlw	1
  1953  0471  00F8               	movwf	??___lldiv
  1954  0472                     u785:	
  1955  0472  1003               	clrc
  1956  0473  0DF0               	rlf	___lldiv@divisor,f
  1957  0474  0DF1               	rlf	___lldiv@divisor+1,f
  1958  0475  0DF2               	rlf	___lldiv@divisor+2,f
  1959  0476  0DF3               	rlf	___lldiv@divisor+3,f
  1960  0477  0BF8               	decfsz	??___lldiv,f
  1961  0478  2C72               	goto	u785
  1962  0479  3001               	movlw	1
  1963  047A  00F8               	movwf	??___lldiv
  1964  047B  0878               	movf	??___lldiv,w
  1965  047C  07FD               	addwf	___lldiv@counter,f
  1966  047D  2C6E               	goto	l1344
  1967  047E                     l1346:	
  1968  047E  3001               	movlw	1
  1969  047F  00F8               	movwf	??___lldiv
  1970  0480                     u805:	
  1971  0480  1003               	clrc
  1972  0481  0DF9               	rlf	___lldiv@quotient,f
  1973  0482  0DFA               	rlf	___lldiv@quotient+1,f
  1974  0483  0DFB               	rlf	___lldiv@quotient+2,f
  1975  0484  0DFC               	rlf	___lldiv@quotient+3,f
  1976  0485  0BF8               	decfsz	??___lldiv,f
  1977  0486  2C80               	goto	u805
  1978  0487  0873               	movf	___lldiv@divisor+3,w
  1979  0488  0277               	subwf	___lldiv@dividend+3,w
  1980  0489  1D03               	skipz
  1981  048A  2C95               	goto	u815
  1982  048B  0872               	movf	___lldiv@divisor+2,w
  1983  048C  0276               	subwf	___lldiv@dividend+2,w
  1984  048D  1D03               	skipz
  1985  048E  2C95               	goto	u815
  1986  048F  0871               	movf	___lldiv@divisor+1,w
  1987  0490  0275               	subwf	___lldiv@dividend+1,w
  1988  0491  1D03               	skipz
  1989  0492  2C95               	goto	u815
  1990  0493  0870               	movf	___lldiv@divisor,w
  1991  0494  0274               	subwf	___lldiv@dividend,w
  1992  0495                     u815:	
  1993  0495  1C03               	skipc
  1994  0496  2CA6               	goto	l1354
  1995  0497  0870               	movf	___lldiv@divisor,w
  1996  0498  02F4               	subwf	___lldiv@dividend,f
  1997  0499  0871               	movf	___lldiv@divisor+1,w
  1998  049A  1C03               	skipc
  1999  049B  0F71               	incfsz	___lldiv@divisor+1,w
  2000  049C  02F5               	subwf	___lldiv@dividend+1,f
  2001  049D  0872               	movf	___lldiv@divisor+2,w
  2002  049E  1C03               	skipc
  2003  049F  0F72               	incfsz	___lldiv@divisor+2,w
  2004  04A0  02F6               	subwf	___lldiv@dividend+2,f
  2005  04A1  0873               	movf	___lldiv@divisor+3,w
  2006  04A2  1C03               	skipc
  2007  04A3  0F73               	incfsz	___lldiv@divisor+3,w
  2008  04A4  02F7               	subwf	___lldiv@dividend+3,f
  2009  04A5  1479               	bsf	___lldiv@quotient,0
  2010  04A6                     l1354:	
  2011  04A6  3001               	movlw	1
  2012  04A7                     u825:	
  2013  04A7  1003               	clrc
  2014  04A8  0CF3               	rrf	___lldiv@divisor+3,f
  2015  04A9  0CF2               	rrf	___lldiv@divisor+2,f
  2016  04AA  0CF1               	rrf	___lldiv@divisor+1,f
  2017  04AB  0CF0               	rrf	___lldiv@divisor,f
  2018  04AC  3EFF               	addlw	-1
  2019  04AD  1D03               	skipz
  2020  04AE  2CA7               	goto	u825
  2021  04AF  3001               	movlw	1
  2022  04B0  02FD               	subwf	___lldiv@counter,f
  2023  04B1  1D03               	btfss	3,2
  2024  04B2  2C7E               	goto	l1346
  2025  04B3                     l1358:	
  2026  04B3  087C               	movf	___lldiv@quotient+3,w
  2027  04B4  00F3               	movwf	?___lldiv+3
  2028  04B5  087B               	movf	___lldiv@quotient+2,w
  2029  04B6  00F2               	movwf	?___lldiv+2
  2030  04B7  087A               	movf	___lldiv@quotient+1,w
  2031  04B8  00F1               	movwf	?___lldiv+1
  2032  04B9  0879               	movf	___lldiv@quotient,w
  2033  04BA  00F0               	movwf	?___lldiv
  2034  04BB  0008               	return
  2035  04BC                     __end_of___lldiv:	
  2036                           
  2037                           	psect	text5
  2038  0186                     __ptext5:	
  2039 ;; *************** function ___bmul *****************
  2040 ;; Defined at:
  2041 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  multiplier      1    wreg     unsigned char 
  2044 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2047 ;;  product         1    2[BANK0 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       1       0       0       0
  2058 ;;      Locals:         0       2       0       0       0
  2059 ;;      Temps:          0       1       0       0       0
  2060 ;;      Totals:         0       4       0       0       0
  2061 ;;Total ram usage:        4 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_LCD_DisplayDecimalNumber
  2067 ;;		_LCD_Printf
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function ___bmul
  2073  0186                     ___bmul:	
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2077                           ;___bmul@multiplier stored from wreg
  2078  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0188  00A3               	movwf	___bmul@multiplier
  2081  0189  01A2               	clrf	___bmul@product
  2082  018A                     l1324:	
  2083  018A  1C23               	btfss	___bmul@multiplier,0
  2084  018B  2990               	goto	l1328
  2085  018C  0820               	movf	___bmul@multiplicand,w
  2086  018D  00A1               	movwf	??___bmul
  2087  018E  0821               	movf	??___bmul,w
  2088  018F  07A2               	addwf	___bmul@product,f
  2089  0190                     l1328:	
  2090  0190  1003               	clrc
  2091  0191  0DA0               	rlf	___bmul@multiplicand,f
  2092  0192  1003               	clrc
  2093  0193  0CA3               	rrf	___bmul@multiplier,f
  2094  0194  08A3               	movf	___bmul@multiplier,f
  2095  0195  1D03               	skipz
  2096  0196  298A               	goto	l1324
  2097  0197  0822               	movf	___bmul@product,w
  2098  0198  0008               	return
  2099  0199                     __end_of___bmul:	
  2100                           
  2101                           	psect	text6
  2102  026E                     __ptext6:	
  2103 ;; *************** function _LCD_DisplayChar *****************
  2104 ;; Defined at:
  2105 ;;		line 309 in file "lcd.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  var_lcdData_    1    wreg     unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  var_lcdData_    1    8[COMMON] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;		None               void
  2112 ;; Registers used:
  2113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0
  2121 ;;      Temps:          1       0       0       0       0
  2122 ;;      Totals:         2       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    4
  2126 ;; This function calls:
  2127 ;;		_LCD_GoToNextLine
  2128 ;;		_lcd_DataWrite
  2129 ;; This function is called by:
  2130 ;;		_LCD_DisplayString
  2131 ;;		_LCD_DisplayDecimalNumber
  2132 ;;		_LCD_Printf
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _LCD_DisplayChar
  2138  026E                     _LCD_DisplayChar:	
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _LCD_DisplayChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2142                           ;LCD_DisplayChar@var_lcdData_u8 stored from wreg
  2143  026E  00F8               	movwf	LCD_DisplayChar@var_lcdData_u8
  2144                           
  2145                           ;lcd.c: 311: if((VAR_LcdTrackCursorPos_U8>=STK_LCDConfig.mvar_MaxSupportedChars_U8) || (
      +                          var_lcdData_u8=='\n'))
  2146  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0271  0865               	movf	_STK_LCDConfig+1,w
  2149  0272  0267               	subwf	_VAR_LcdTrackCursorPos_U8,w
  2150  0273  1803               	skipnc
  2151  0274  2A79               	goto	l1314
  2152  0275  0878               	movf	LCD_DisplayChar@var_lcdData_u8,w
  2153  0276  3A0A               	xorlw	10
  2154  0277  1D03               	skipz
  2155  0278  2A7E               	goto	l1316
  2156  0279                     l1314:	
  2157                           
  2158                           ;lcd.c: 312: {
  2159                           ;lcd.c: 315: LCD_GoToNextLine();
  2160  0279  120A  118A  21D6  120A  118A  	fcall	_LCD_GoToNextLine
  2161  027E                     l1316:	
  2162                           
  2163                           ;lcd.c: 316: }
  2164                           ;lcd.c: 317: if(var_lcdData_u8!='\n')
  2165  027E  0878               	movf	LCD_DisplayChar@var_lcdData_u8,w
  2166  027F  3A0A               	xorlw	10
  2167  0280  1903               	skipnz
  2168  0281  0008               	return
  2169                           
  2170                           ;lcd.c: 318: {
  2171                           ;lcd.c: 320: lcd_DataWrite(var_lcdData_u8);
  2172  0282  0878               	movf	LCD_DisplayChar@var_lcdData_u8,w
  2173  0283  120A  118A  2336   	fcall	_lcd_DataWrite
  2174                           
  2175                           ;lcd.c: 321: VAR_LcdTrackCursorPos_U8++;
  2176  0286  3001               	movlw	1
  2177  0287  00F7               	movwf	??_LCD_DisplayChar
  2178  0288  0877               	movf	??_LCD_DisplayChar,w
  2179  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2180  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2181  028B  07E7               	addwf	_VAR_LcdTrackCursorPos_U8,f
  2182  028C  0008               	return
  2183  028D                     __end_of_LCD_DisplayChar:	
  2184                           
  2185                           	psect	text7
  2186  0336                     __ptext7:	
  2187 ;; *************** function _lcd_DataWrite *****************
  2188 ;; Defined at:
  2189 ;;		line 839 in file "lcd.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  dat             1    wreg     unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  dat             1    5[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0
  2206 ;;      Totals:         2       0       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		_lcd_BusyCheck
  2212 ;;		_lcd_SendDataSignals
  2213 ;;		_lcd_SendNibble
  2214 ;; This function is called by:
  2215 ;;		_LCD_DisplayChar
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _lcd_DataWrite
  2221  0336                     _lcd_DataWrite:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _lcd_DataWrite: [wreg+status,2+status,0+pclath+cstack]
  2225                           ;lcd_DataWrite@dat stored from wreg
  2226  0336  00F5               	movwf	lcd_DataWrite@dat
  2227                           
  2228                           ;lcd.c: 841: lcd_BusyCheck();
  2229  0337  120A  118A  240A  120A  118A  	fcall	_lcd_BusyCheck
  2230                           
  2231                           ;lcd.c: 842: if(STK_LCDConfig.mvar_LcdMode_U8 == 8u)
  2232  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2233  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2234  033E  0866               	movf	_STK_LCDConfig+2,w
  2235  033F  3A08               	xorlw	8
  2236  0340  1D03               	skipz
  2237  0341  2B48               	goto	l1290
  2238                           
  2239                           ;lcd.c: 843: {
  2240                           ;lcd.c: 844: PORTB = dat;
  2241  0342  0875               	movf	lcd_DataWrite@dat,w
  2242  0343  0086               	movwf	6	;volatile
  2243                           
  2244                           ;lcd.c: 845: lcd_SendDataSignals();
  2245  0344  120A  118A  21EC   	fcall	_lcd_SendDataSignals
  2246                           
  2247                           ;lcd.c: 846: }
  2248  0347  0008               	return
  2249  0348                     l1290:	
  2250                           
  2251                           ;lcd.c: 847: else if(STK_LCDConfig.mvar_LcdMode_U8 == 4u)
  2252  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2254  034A  0866               	movf	_STK_LCDConfig+2,w
  2255  034B  3A04               	xorlw	4
  2256  034C  1D03               	skipz
  2257  034D  0008               	return
  2258                           
  2259                           ;lcd.c: 848: {
  2260                           ;lcd.c: 849: lcd_SendNibble(dat);
  2261  034E  0875               	movf	lcd_DataWrite@dat,w
  2262  034F  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2263                           
  2264                           ;lcd.c: 850: lcd_SendDataSignals();
  2265  0354  120A  118A  21EC  120A  118A  	fcall	_lcd_SendDataSignals
  2266                           
  2267                           ;lcd.c: 852: lcd_SendNibble(dat << 4);
  2268  0359  0875               	movf	lcd_DataWrite@dat,w
  2269  035A  00F4               	movwf	??_lcd_DataWrite
  2270  035B  3003               	movlw	3
  2271  035C                     u695:	
  2272  035C  1003               	clrc
  2273  035D  0DF4               	rlf	??_lcd_DataWrite,f
  2274  035E  3EFF               	addlw	-1
  2275  035F  1D03               	skipz
  2276  0360  2B5C               	goto	u695
  2277  0361  1003               	clrc
  2278  0362  0D74               	rlf	??_lcd_DataWrite,w
  2279  0363  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2280                           
  2281                           ;lcd.c: 853: lcd_SendDataSignals();
  2282  0368  120A  118A  21EC   	fcall	_lcd_SendDataSignals
  2283  036B  0008               	return
  2284  036C                     __end_of_lcd_DataWrite:	
  2285                           
  2286                           	psect	text8
  2287  01EC                     __ptext8:	
  2288 ;; *************** function _lcd_SendDataSignals *****************
  2289 ;; Defined at:
  2290 ;;		line 994 in file "lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          1       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    1
  2311 ;; This function calls:
  2312 ;;		_DELAY_us
  2313 ;; This function is called by:
  2314 ;;		_lcd_DataWrite
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           
  2319                           ;psect for function _lcd_SendDataSignals
  2320  01EC                     _lcd_SendDataSignals:	
  2321                           
  2322                           ;lcd.c: 996: (((PORTD)) |= (1<<((0))));
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _lcd_SendDataSignals: [wreg+status,2+status,0+pclath+cstack]
  2326  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2327  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2328  01EE  1408               	bsf	8,0	;volatile
  2329                           
  2330                           ;lcd.c: 998: (((PORTD)) &= ~(1<<((1))));
  2331  01EF  30FD               	movlw	253
  2332  01F0  00F2               	movwf	??_lcd_SendDataSignals
  2333  01F1  0872               	movf	??_lcd_SendDataSignals,w
  2334  01F2  0588               	andwf	8,f	;volatile
  2335                           
  2336                           ;lcd.c: 1000: (((PORTD)) |= (1<<((2))));
  2337  01F3  1508               	bsf	8,2	;volatile
  2338                           
  2339                           ;lcd.c: 1001: DELAY_us(10);
  2340  01F4  300A               	movlw	10
  2341  01F5  00F0               	movwf	DELAY_us@us_count
  2342  01F6  3000               	movlw	0
  2343  01F7  00F1               	movwf	DELAY_us@us_count+1
  2344  01F8  120A  118A  2170   	fcall	_DELAY_us
  2345                           
  2346                           ;lcd.c: 1002: (((PORTD)) &= ~(1<<((2))));
  2347  01FB  30FB               	movlw	251
  2348  01FC  00F2               	movwf	??_lcd_SendDataSignals
  2349  01FD  0872               	movf	??_lcd_SendDataSignals,w
  2350  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2351  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0200  0588               	andwf	8,f	;volatile
  2353  0201  0008               	return
  2354  0202                     __end_of_lcd_SendDataSignals:	
  2355                           
  2356                           	psect	text9
  2357  01D6                     __ptext9:	
  2358 ;; *************** function _LCD_GoToNextLine *****************
  2359 ;; Defined at:
  2360 ;;		line 208 in file "lcd.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0
  2376 ;;      Temps:          1       0       0       0       0
  2377 ;;      Totals:         1       0       0       0       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		_LCD_CmdWrite
  2383 ;; This function is called by:
  2384 ;;		_LCD_DisplayChar
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _LCD_GoToNextLine
  2390  01D6                     _LCD_GoToNextLine:	
  2391                           
  2392                           ;lcd.c: 212: VAR_LcdTrackLineNum_U8++;
  2393                           
  2394                           ;incstack = 0
  2395                           ; Regs used in _LCD_GoToNextLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2396  01D6  3001               	movlw	1
  2397  01D7  00F6               	movwf	??_LCD_GoToNextLine
  2398  01D8  0876               	movf	??_LCD_GoToNextLine,w
  2399  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2400  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2401  01DB  07E8               	addwf	_VAR_LcdTrackLineNum_U8,f
  2402                           
  2403                           ;lcd.c: 213: VAR_LcdTrackCursorPos_U8 = 0x00;
  2404  01DC  01E7               	clrf	_VAR_LcdTrackCursorPos_U8
  2405                           
  2406                           ;lcd.c: 214: if(VAR_LcdTrackLineNum_U8 > STK_LCDConfig.mvar_MaxSupportedLines_U8)
  2407  01DD  0868               	movf	_VAR_LcdTrackLineNum_U8,w
  2408  01DE  0264               	subwf	_STK_LCDConfig,w
  2409  01DF  1803               	skipnc
  2410  01E0  29E3               	goto	l1280
  2411                           
  2412                           ;lcd.c: 215: VAR_LcdTrackLineNum_U8 = 0x01;
  2413  01E1  01E8               	clrf	_VAR_LcdTrackLineNum_U8
  2414  01E2  0AE8               	incf	_VAR_LcdTrackLineNum_U8,f
  2415  01E3                     l1280:	
  2416                           
  2417                           ;lcd.c: 216: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[VAR_LcdTrackLineNum_U8]);
  2418  01E3  0868               	movf	_VAR_LcdTrackLineNum_U8,w
  2419  01E4  3E5F               	addlw	_ARR_LcdLineNumAddress_U8& (0+255)
  2420  01E5  0084               	movwf	4
  2421  01E6  1383               	bcf	3,7	;select IRP bank0
  2422  01E7  0800               	movf	0,w
  2423  01E8  120A  118A  2300   	fcall	_LCD_CmdWrite
  2424  01EB  0008               	return
  2425  01EC                     __end_of_LCD_GoToNextLine:	
  2426                           
  2427                           	psect	text10
  2428  03BB                     __ptext10:	
  2429 ;; *************** function _LCD_Init *****************
  2430 ;; Defined at:
  2431 ;;		line 112 in file "lcd.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  var_lcdMode_    1    wreg     unsigned char 
  2434 ;;  var_lcdNoOfL    1    8[COMMON] unsigned char 
  2435 ;;  var_MaxChars    1    9[COMMON] unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  var_lcdMode_    1   11[COMMON] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         2       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0
  2449 ;;      Temps:          1       0       0       0       0
  2450 ;;      Totals:         4       0       0       0       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    5
  2454 ;; This function calls:
  2455 ;;		_DELAY_ms
  2456 ;;		_LCD_Clear
  2457 ;;		_LCD_CmdWrite
  2458 ;;		_lcd_Reset
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _LCD_Init
  2466  03BB                     _LCD_Init:	
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2470                           ;LCD_Init@var_lcdMode_u8 stored from wreg
  2471  03BB  00FB               	movwf	LCD_Init@var_lcdMode_u8
  2472                           
  2473                           ;lcd.c: 116: TRISB = 0x00u;
  2474  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2475  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2476  03BE  0186               	clrf	6	;volatile
  2477                           
  2478                           ;lcd.c: 117: TRISD = 0x00u;
  2479  03BF  0188               	clrf	8	;volatile
  2480                           
  2481                           ;lcd.c: 118: STK_LCDConfig.mvar_LcdMode_U8 = var_lcdMode_u8;
  2482  03C0  087B               	movf	LCD_Init@var_lcdMode_u8,w
  2483  03C1  00FA               	movwf	??_LCD_Init
  2484  03C2  087A               	movf	??_LCD_Init,w
  2485  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2486  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2487  03C5  00E6               	movwf	_STK_LCDConfig+2
  2488                           
  2489                           ;lcd.c: 119: STK_LCDConfig.mvar_MaxSupportedChars_U8 = var_MaxCharsPerLine_u8;
  2490  03C6  0879               	movf	LCD_Init@var_MaxCharsPerLine_u8,w
  2491  03C7  00FA               	movwf	??_LCD_Init
  2492  03C8  087A               	movf	??_LCD_Init,w
  2493  03C9  00E5               	movwf	_STK_LCDConfig+1
  2494                           
  2495                           ;lcd.c: 120: STK_LCDConfig.mvar_MaxSupportedLines_U8 = var_lcdNoOfLines_u8;
  2496  03CA  0878               	movf	LCD_Init@var_lcdNoOfLines_u8,w
  2497  03CB  00FA               	movwf	??_LCD_Init
  2498  03CC  087A               	movf	??_LCD_Init,w
  2499  03CD  00E4               	movwf	_STK_LCDConfig
  2500                           
  2501                           ;lcd.c: 121: if(var_lcdNoOfLines_u8 > mENUM_LcdLineTwo)
  2502  03CE  3003               	movlw	3
  2503  03CF  0278               	subwf	LCD_Init@var_lcdNoOfLines_u8,w
  2504  03D0  1C03               	skipc
  2505  03D1  2BDE               	goto	l1488
  2506                           
  2507                           ;lcd.c: 122: {
  2508                           ;lcd.c: 123: ARR_LcdLineNumAddress_U8[mENUM_LcdLineThree] = 0x90 + (var_MaxCharsPerLine_
      +                          u8 & 0x0fu);
  2509  03D2  0879               	movf	LCD_Init@var_MaxCharsPerLine_u8,w
  2510  03D3  390F               	andlw	15
  2511  03D4  3E90               	addlw	144
  2512  03D5  00FA               	movwf	??_LCD_Init
  2513  03D6  087A               	movf	??_LCD_Init,w
  2514  03D7  00E2               	movwf	_ARR_LcdLineNumAddress_U8+3
  2515                           
  2516                           ;lcd.c: 124: ARR_LcdLineNumAddress_U8[mENUM_LcdLineFour] = 0xd0 + (var_MaxCharsPerLine_u
      +                          8 & 0x0fu);
  2517  03D8  0879               	movf	LCD_Init@var_MaxCharsPerLine_u8,w
  2518  03D9  390F               	andlw	15
  2519  03DA  3ED0               	addlw	208
  2520  03DB  00FA               	movwf	??_LCD_Init
  2521  03DC  087A               	movf	??_LCD_Init,w
  2522  03DD  00E3               	movwf	_ARR_LcdLineNumAddress_U8+4
  2523  03DE                     l1488:	
  2524                           
  2525                           ;lcd.c: 125: }
  2526                           ;lcd.c: 127: DELAY_ms(100);
  2527  03DE  3064               	movlw	100
  2528  03DF  00F2               	movwf	DELAY_ms@ms_count
  2529  03E0  3000               	movlw	0
  2530  03E1  00F3               	movwf	DELAY_ms@ms_count+1
  2531  03E2  120A  118A  2199  120A  118A  	fcall	_DELAY_ms
  2532                           
  2533                           ;lcd.c: 129: if(STK_LCDConfig.mvar_LcdMode_U8 == 8u)
  2534  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2535  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2536  03E9  0866               	movf	_STK_LCDConfig+2,w
  2537  03EA  3A08               	xorlw	8
  2538  03EB  1D03               	skipz
  2539  03EC  2BEF               	goto	l1494
  2540                           
  2541                           ;lcd.c: 130: {
  2542                           ;lcd.c: 131: LCD_CmdWrite(0x38u);
  2543  03ED  3038               	movlw	56
  2544  03EE  2BFB               	goto	L6
  2545  03EF                     l1494:	
  2546                           ;lcd.c: 132: }
  2547                           
  2548                           
  2549                           ;lcd.c: 133: else if(STK_LCDConfig.mvar_LcdMode_U8 == 4u)
  2550  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2551  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2552  03F1  0866               	movf	_STK_LCDConfig+2,w
  2553  03F2  3A04               	xorlw	4
  2554  03F3  1D03               	skipz
  2555  03F4  2C00               	goto	l103
  2556                           
  2557                           ;lcd.c: 134: {
  2558                           ;lcd.c: 135: lcd_Reset();
  2559  03F5  120A  118A  236C  120A  118A  	fcall	_lcd_Reset
  2560                           
  2561                           ;lcd.c: 136: LCD_CmdWrite(0x28u);
  2562  03FA  3028               	movlw	40
  2563  03FB                     L6:	
  2564  03FB  120A  118A  2300  120A  118A  	fcall	_LCD_CmdWrite
  2565  0400                     l103:	
  2566                           
  2567                           ;lcd.c: 137: }
  2568                           ;lcd.c: 139: LCD_CmdWrite(0x0Eu);
  2569  0400  300E               	movlw	14
  2570  0401  120A  118A  2300  120A  118A  	fcall	_LCD_CmdWrite
  2571                           
  2572                           ;lcd.c: 140: LCD_Clear();
  2573  0406  120A  118A  217B   	fcall	_LCD_Clear
  2574  0409  0008               	return
  2575  040A                     __end_of_LCD_Init:	
  2576                           
  2577                           	psect	text11
  2578  036C                     __ptext11:	
  2579 ;; *************** function _lcd_Reset *****************
  2580 ;; Defined at:
  2581 ;;		line 923 in file "lcd.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		_DELAY_ms
  2604 ;;		_DELAY_us
  2605 ;;		_lcd_SendCmdSignals
  2606 ;;		_lcd_SendNibble
  2607 ;; This function is called by:
  2608 ;;		_LCD_Init
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _lcd_Reset
  2614  036C                     _lcd_Reset:	
  2615                           
  2616                           ;lcd.c: 926: lcd_SendNibble(0x30);
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _lcd_Reset: [wreg+status,2+status,0+pclath+cstack]
  2620  036C  3030               	movlw	48
  2621  036D  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2622                           
  2623                           ;lcd.c: 927: lcd_SendCmdSignals();
  2624  0372  120A  118A  221A  120A  118A  	fcall	_lcd_SendCmdSignals
  2625                           
  2626                           ;lcd.c: 928: DELAY_ms(100);
  2627  0377  3064               	movlw	100
  2628  0378  00F2               	movwf	DELAY_ms@ms_count
  2629  0379  3000               	movlw	0
  2630  037A  00F3               	movwf	DELAY_ms@ms_count+1
  2631  037B  120A  118A  2199  120A  118A  	fcall	_DELAY_ms
  2632                           
  2633                           ;lcd.c: 929: lcd_SendNibble(0x30);
  2634  0380  3030               	movlw	48
  2635  0381  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2636                           
  2637                           ;lcd.c: 930: lcd_SendCmdSignals();
  2638  0386  120A  118A  221A  120A  118A  	fcall	_lcd_SendCmdSignals
  2639                           
  2640                           ;lcd.c: 931: DELAY_us(200);
  2641  038B  30C8               	movlw	200
  2642  038C  00F0               	movwf	DELAY_us@us_count
  2643  038D  3000               	movlw	0
  2644  038E  00F1               	movwf	DELAY_us@us_count+1
  2645  038F  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  2646                           
  2647                           ;lcd.c: 932: lcd_SendNibble(0x30);
  2648  0394  3030               	movlw	48
  2649  0395  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2650                           
  2651                           ;lcd.c: 933: lcd_SendCmdSignals();
  2652  039A  120A  118A  221A  120A  118A  	fcall	_lcd_SendCmdSignals
  2653                           
  2654                           ;lcd.c: 934: DELAY_us(200);
  2655  039F  30C8               	movlw	200
  2656  03A0  00F0               	movwf	DELAY_us@us_count
  2657  03A1  3000               	movlw	0
  2658  03A2  00F1               	movwf	DELAY_us@us_count+1
  2659  03A3  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  2660                           
  2661                           ;lcd.c: 935: lcd_SendNibble(0x20);
  2662  03A8  3020               	movlw	32
  2663  03A9  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2664                           
  2665                           ;lcd.c: 936: lcd_SendCmdSignals();
  2666  03AE  120A  118A  221A  120A  118A  	fcall	_lcd_SendCmdSignals
  2667                           
  2668                           ;lcd.c: 937: DELAY_us(200);
  2669  03B3  30C8               	movlw	200
  2670  03B4  00F0               	movwf	DELAY_us@us_count
  2671  03B5  3000               	movlw	0
  2672  03B6  00F1               	movwf	DELAY_us@us_count+1
  2673  03B7  120A  118A  2170   	fcall	_DELAY_us
  2674  03BA  0008               	return
  2675  03BB                     __end_of_lcd_Reset:	
  2676                           
  2677                           	psect	text12
  2678  017B                     __ptext12:	
  2679 ;; *************** function _LCD_Clear *****************
  2680 ;; Defined at:
  2681 ;;		line 154 in file "lcd.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    4
  2702 ;; This function calls:
  2703 ;;		_LCD_CmdWrite
  2704 ;;		_LCD_GoToLine
  2705 ;; This function is called by:
  2706 ;;		_LCD_Init
  2707 ;;		_main
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _LCD_Clear
  2713  017B                     _LCD_Clear:	
  2714                           
  2715                           ;lcd.c: 156: LCD_CmdWrite(0x01u);
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2719  017B  3001               	movlw	1
  2720  017C  120A  118A  2300  120A  118A  	fcall	_LCD_CmdWrite
  2721                           
  2722                           ;lcd.c: 157: LCD_GoToLine(mENUM_LcdLineOne);
  2723  0181  3001               	movlw	1
  2724  0182  120A  118A  21C1   	fcall	_LCD_GoToLine
  2725  0185  0008               	return
  2726  0186                     __end_of_LCD_Clear:	
  2727                           
  2728                           	psect	text13
  2729  01C1                     __ptext13:	
  2730 ;; *************** function _LCD_GoToLine *****************
  2731 ;; Defined at:
  2732 ;;		line 181 in file "lcd.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  var_lineNumb    1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  var_lineNumb    1    7[COMMON] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;		None               void
  2739 ;; Registers used:
  2740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0
  2749 ;;      Totals:         2       0       0       0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    3
  2753 ;; This function calls:
  2754 ;;		_LCD_CmdWrite
  2755 ;; This function is called by:
  2756 ;;		_LCD_Clear
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           
  2762                           ;psect for function _LCD_GoToLine
  2763  01C1                     _LCD_GoToLine:	
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in _LCD_GoToLine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2767                           ;LCD_GoToLine@var_lineNumber_u8 stored from wreg
  2768  01C1  00F7               	movwf	LCD_GoToLine@var_lineNumber_u8
  2769                           
  2770                           ;lcd.c: 183: if(var_lineNumber_u8 <= STK_LCDConfig.mvar_MaxSupportedLines_U8)
  2771  01C2  0877               	movf	LCD_GoToLine@var_lineNumber_u8,w
  2772  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2773  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2774  01C5  0264               	subwf	_STK_LCDConfig,w
  2775  01C6  1C03               	skipc
  2776  01C7  0008               	return
  2777                           
  2778                           ;lcd.c: 184: {
  2779                           ;lcd.c: 187: VAR_LcdTrackCursorPos_U8 = 0x00;
  2780  01C8  01E7               	clrf	_VAR_LcdTrackCursorPos_U8
  2781                           
  2782                           ;lcd.c: 188: VAR_LcdTrackLineNum_U8 = var_lineNumber_u8;
  2783  01C9  0877               	movf	LCD_GoToLine@var_lineNumber_u8,w
  2784  01CA  00F6               	movwf	??_LCD_GoToLine
  2785  01CB  0876               	movf	??_LCD_GoToLine,w
  2786  01CC  00E8               	movwf	_VAR_LcdTrackLineNum_U8
  2787                           
  2788                           ;lcd.c: 189: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[var_lineNumber_u8]);
  2789  01CD  0877               	movf	LCD_GoToLine@var_lineNumber_u8,w
  2790  01CE  3E5F               	addlw	_ARR_LcdLineNumAddress_U8& (0+255)
  2791  01CF  0084               	movwf	4
  2792  01D0  1383               	bcf	3,7	;select IRP bank0
  2793  01D1  0800               	movf	0,w
  2794  01D2  120A  118A  2300   	fcall	_LCD_CmdWrite
  2795  01D5  0008               	return
  2796  01D6                     __end_of_LCD_GoToLine:	
  2797                           
  2798                           	psect	text14
  2799  0300                     __ptext14:	
  2800 ;; *************** function _LCD_CmdWrite *****************
  2801 ;; Defined at:
  2802 ;;		line 274 in file "lcd.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  var_lcdCmd_u    1    wreg     unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  var_lcdCmd_u    1    5[COMMON] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         1       0       0       0       0
  2818 ;;      Temps:          1       0       0       0       0
  2819 ;;      Totals:         2       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    2
  2823 ;; This function calls:
  2824 ;;		_lcd_BusyCheck
  2825 ;;		_lcd_SendCmdSignals
  2826 ;;		_lcd_SendNibble
  2827 ;; This function is called by:
  2828 ;;		_LCD_Init
  2829 ;;		_LCD_Clear
  2830 ;;		_LCD_GoToLine
  2831 ;;		_LCD_GoToNextLine
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _LCD_CmdWrite
  2837  0300                     _LCD_CmdWrite:	
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
  2841                           ;LCD_CmdWrite@var_lcdCmd_u8 stored from wreg
  2842  0300  00F5               	movwf	LCD_CmdWrite@var_lcdCmd_u8
  2843                           
  2844                           ;lcd.c: 276: lcd_BusyCheck();
  2845  0301  120A  118A  240A  120A  118A  	fcall	_lcd_BusyCheck
  2846                           
  2847                           ;lcd.c: 277: if(STK_LCDConfig.mvar_LcdMode_U8 == 8u)
  2848  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0308  0866               	movf	_STK_LCDConfig+2,w
  2851  0309  3A08               	xorlw	8
  2852  030A  1D03               	skipz
  2853  030B  2B12               	goto	l1258
  2854                           
  2855                           ;lcd.c: 278: {
  2856                           ;lcd.c: 280: PORTB = var_lcdCmd_u8;
  2857  030C  0875               	movf	LCD_CmdWrite@var_lcdCmd_u8,w
  2858  030D  0086               	movwf	6	;volatile
  2859                           
  2860                           ;lcd.c: 281: lcd_SendCmdSignals();
  2861  030E  120A  118A  221A   	fcall	_lcd_SendCmdSignals
  2862                           
  2863                           ;lcd.c: 282: }
  2864  0311  0008               	return
  2865  0312                     l1258:	
  2866                           
  2867                           ;lcd.c: 283: else if(STK_LCDConfig.mvar_LcdMode_U8 == 4u)
  2868  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0314  0866               	movf	_STK_LCDConfig+2,w
  2871  0315  3A04               	xorlw	4
  2872  0316  1D03               	skipz
  2873  0317  0008               	return
  2874                           
  2875                           ;lcd.c: 284: {
  2876                           ;lcd.c: 285: lcd_SendNibble(var_lcdCmd_u8);
  2877  0318  0875               	movf	LCD_CmdWrite@var_lcdCmd_u8,w
  2878  0319  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2879                           
  2880                           ;lcd.c: 286: lcd_SendCmdSignals();
  2881  031E  120A  118A  221A  120A  118A  	fcall	_lcd_SendCmdSignals
  2882                           
  2883                           ;lcd.c: 288: lcd_SendNibble(var_lcdCmd_u8 << 4);
  2884  0323  0875               	movf	LCD_CmdWrite@var_lcdCmd_u8,w
  2885  0324  00F4               	movwf	??_LCD_CmdWrite
  2886  0325  3003               	movlw	3
  2887  0326                     u655:	
  2888  0326  1003               	clrc
  2889  0327  0DF4               	rlf	??_LCD_CmdWrite,f
  2890  0328  3EFF               	addlw	-1
  2891  0329  1D03               	skipz
  2892  032A  2B26               	goto	u655
  2893  032B  1003               	clrc
  2894  032C  0D74               	rlf	??_LCD_CmdWrite,w
  2895  032D  120A  118A  22B3  120A  118A  	fcall	_lcd_SendNibble
  2896                           
  2897                           ;lcd.c: 289: lcd_SendCmdSignals();
  2898  0332  120A  118A  221A   	fcall	_lcd_SendCmdSignals
  2899  0335  0008               	return
  2900  0336                     __end_of_LCD_CmdWrite:	
  2901                           
  2902                           	psect	text15
  2903  02B3                     __ptext15:	
  2904 ;; *************** function _lcd_SendNibble *****************
  2905 ;; Defined at:
  2906 ;;		line 953 in file "lcd.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  var             1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  var             1    1[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0
  2922 ;;      Temps:          1       0       0       0       0
  2923 ;;      Totals:         2       0       0       0       0
  2924 ;;Total ram usage:        2 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_LCD_CmdWrite
  2930 ;;		_lcd_DataWrite
  2931 ;;		_lcd_Reset
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _lcd_SendNibble
  2937  02B3                     _lcd_SendNibble:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _lcd_SendNibble: [wreg+status,2+status,0]
  2941                           ;lcd_SendNibble@var stored from wreg
  2942  02B3  00F1               	movwf	lcd_SendNibble@var
  2943                           
  2944                           ;lcd.c: 955: (((((var)&((1<<(4))))!=0u))? ((PORTB) |= (1<<(4))): ((PORTB) &= ~(1<<(4))))
      +                          ;
  2945  02B4  1E71               	btfss	lcd_SendNibble@var,4
  2946  02B5  2ABA               	goto	l1230
  2947  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2948  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2949  02B8  1606               	bsf	6,4	;volatile
  2950  02B9  2AC0               	goto	l1232
  2951  02BA                     l1230:	
  2952  02BA  30EF               	movlw	239
  2953  02BB  00F0               	movwf	??_lcd_SendNibble
  2954  02BC  0870               	movf	??_lcd_SendNibble,w
  2955  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2956  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2957  02BF  0586               	andwf	6,f	;volatile
  2958  02C0                     l1232:	
  2959                           
  2960                           ;lcd.c: 956: (((((var)&((1<<(5))))!=0u))? ((PORTB) |= (1<<(5))): ((PORTB) &= ~(1<<(5))))
      +                          ;
  2961  02C0  1EF1               	btfss	lcd_SendNibble@var,5
  2962  02C1  2AC4               	goto	l1236
  2963  02C2  1686               	bsf	6,5	;volatile
  2964  02C3  2AC8               	goto	l1238
  2965  02C4                     l1236:	
  2966  02C4  30DF               	movlw	223
  2967  02C5  00F0               	movwf	??_lcd_SendNibble
  2968  02C6  0870               	movf	??_lcd_SendNibble,w
  2969  02C7  0586               	andwf	6,f	;volatile
  2970  02C8                     l1238:	
  2971                           
  2972                           ;lcd.c: 957: (((((var)&((1<<(6))))!=0u))? ((PORTB) |= (1<<(6))): ((PORTB) &= ~(1<<(6))))
      +                          ;
  2973  02C8  1F71               	btfss	lcd_SendNibble@var,6
  2974  02C9  2ACC               	goto	l1242
  2975  02CA  1706               	bsf	6,6	;volatile
  2976  02CB  2AD0               	goto	l1244
  2977  02CC                     l1242:	
  2978  02CC  30BF               	movlw	191
  2979  02CD  00F0               	movwf	??_lcd_SendNibble
  2980  02CE  0870               	movf	??_lcd_SendNibble,w
  2981  02CF  0586               	andwf	6,f	;volatile
  2982  02D0                     l1244:	
  2983                           
  2984                           ;lcd.c: 958: (((((var)&((1<<(7))))!=0u))? ((PORTB) |= (1<<(7))): ((PORTB) &= ~(1<<(7))))
      +                          ;
  2985  02D0  1FF1               	btfss	lcd_SendNibble@var,7
  2986  02D1  2AD4               	goto	l1248
  2987  02D2  1786               	bsf	6,7	;volatile
  2988  02D3  0008               	return
  2989  02D4                     l1248:	
  2990  02D4  307F               	movlw	127
  2991  02D5  00F0               	movwf	??_lcd_SendNibble
  2992  02D6  0870               	movf	??_lcd_SendNibble,w
  2993  02D7  0586               	andwf	6,f	;volatile
  2994  02D8  0008               	return
  2995  02D9                     __end_of_lcd_SendNibble:	
  2996                           
  2997                           	psect	text16
  2998  021A                     __ptext16:	
  2999 ;; *************** function _lcd_SendCmdSignals *****************
  3000 ;; Defined at:
  3001 ;;		line 972 in file "lcd.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0
  3017 ;;      Temps:          1       0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    1
  3022 ;; This function calls:
  3023 ;;		_DELAY_us
  3024 ;; This function is called by:
  3025 ;;		_LCD_CmdWrite
  3026 ;;		_lcd_Reset
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _lcd_SendCmdSignals
  3032  021A                     _lcd_SendCmdSignals:	
  3033                           
  3034                           ;lcd.c: 974: (((PORTD)) &= ~(1<<((0))));
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _lcd_SendCmdSignals: [wreg+status,2+status,0+pclath+cstack]
  3038  021A  30FE               	movlw	254
  3039  021B  00F2               	movwf	??_lcd_SendCmdSignals
  3040  021C  0872               	movf	??_lcd_SendCmdSignals,w
  3041  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3042  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3043  021F  0588               	andwf	8,f	;volatile
  3044                           
  3045                           ;lcd.c: 976: (((PORTD)) &= ~(1<<((1))));
  3046  0220  30FD               	movlw	253
  3047  0221  00F2               	movwf	??_lcd_SendCmdSignals
  3048  0222  0872               	movf	??_lcd_SendCmdSignals,w
  3049  0223  0588               	andwf	8,f	;volatile
  3050                           
  3051                           ;lcd.c: 978: (((PORTD)) |= (1<<((2))));
  3052  0224  1508               	bsf	8,2	;volatile
  3053                           
  3054                           ;lcd.c: 979: DELAY_us(10);
  3055  0225  300A               	movlw	10
  3056  0226  00F0               	movwf	DELAY_us@us_count
  3057  0227  3000               	movlw	0
  3058  0228  00F1               	movwf	DELAY_us@us_count+1
  3059  0229  120A  118A  2170   	fcall	_DELAY_us
  3060                           
  3061                           ;lcd.c: 980: (((PORTD)) &= ~(1<<((2))));
  3062  022C  30FB               	movlw	251
  3063  022D  00F2               	movwf	??_lcd_SendCmdSignals
  3064  022E  0872               	movf	??_lcd_SendCmdSignals,w
  3065  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0231  0588               	andwf	8,f	;volatile
  3068  0232  0008               	return
  3069  0233                     __end_of_lcd_SendCmdSignals:	
  3070                           
  3071                           	psect	text17
  3072  040A                     __ptext17:	
  3073 ;; *************** function _lcd_BusyCheck *****************
  3074 ;; Defined at:
  3075 ;;		line 873 in file "lcd.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  busyflag        1    3[COMMON] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       0       0       0       0
  3090 ;;      Locals:         1       0       0       0       0
  3091 ;;      Temps:          1       0       0       0       0
  3092 ;;      Totals:         2       0       0       0       0
  3093 ;;Total ram usage:        2 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    1
  3096 ;; This function calls:
  3097 ;;		_DELAY_us
  3098 ;; This function is called by:
  3099 ;;		_LCD_CmdWrite
  3100 ;;		_lcd_DataWrite
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _lcd_BusyCheck
  3106  040A                     _lcd_BusyCheck:	
  3107                           
  3108                           ;incstack = 0
  3109                           ; Regs used in _lcd_BusyCheck: [wreg+status,2+status,0+pclath+cstack]
  3110  040A  1683               	bsf	3,5	;RP0=1, select bank1
  3111  040B  1303               	bcf	3,6	;RP1=0, select bank1
  3112  040C  1786               	bsf	6,7	;volatile
  3113                           
  3114                           ;lcd.c: 879: (((PORTD)) &= ~(1<<((0))));
  3115  040D  30FE               	movlw	254
  3116  040E  00F2               	movwf	??_lcd_BusyCheck
  3117  040F  0872               	movf	??_lcd_BusyCheck,w
  3118  0410  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0411  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0412  0588               	andwf	8,f	;volatile
  3121                           
  3122                           ;lcd.c: 880: (((PORTD)) |= (1<<((1))));
  3123  0413  1488               	bsf	8,1	;volatile
  3124  0414                     l204:	
  3125                           ;lcd.c: 881: do
  3126                           
  3127                           
  3128                           ;lcd.c: 882: {
  3129                           ;lcd.c: 884: (((PORTD)) &= ~(1<<((2))));
  3130  0414  30FB               	movlw	251
  3131  0415  00F2               	movwf	??_lcd_BusyCheck
  3132  0416  0872               	movf	??_lcd_BusyCheck,w
  3133  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0419  0588               	andwf	8,f	;volatile
  3136                           
  3137                           ;lcd.c: 885: DELAY_us(10);
  3138  041A  300A               	movlw	10
  3139  041B  00F0               	movwf	DELAY_us@us_count
  3140  041C  3000               	movlw	0
  3141  041D  00F1               	movwf	DELAY_us@us_count+1
  3142  041E  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  3143                           
  3144                           ;lcd.c: 886: (((PORTD)) |= (1<<((2))));
  3145  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0424  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0425  1508               	bsf	8,2	;volatile
  3148                           
  3149                           ;lcd.c: 887: DELAY_us(10);
  3150  0426  300A               	movlw	10
  3151  0427  00F0               	movwf	DELAY_us@us_count
  3152  0428  3000               	movlw	0
  3153  0429  00F1               	movwf	DELAY_us@us_count+1
  3154  042A  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  3155                           
  3156                           ;lcd.c: 888: busyflag = (((PORTB)&((1<<(7))))!=0u);
  3157  042F  3000               	movlw	0
  3158  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0432  1B86               	btfsc	6,7	;volatile
  3161  0433  3001               	movlw	1
  3162  0434  00F2               	movwf	??_lcd_BusyCheck
  3163  0435  0872               	movf	??_lcd_BusyCheck,w
  3164  0436  00F3               	movwf	lcd_BusyCheck@busyflag
  3165                           
  3166                           ;lcd.c: 891: if(STK_LCDConfig.mvar_LcdMode_U8 == 4)
  3167  0437  0866               	movf	_STK_LCDConfig+2,w
  3168  0438  3A04               	xorlw	4
  3169  0439  1D03               	skipz
  3170  043A  2C54               	goto	l1212
  3171                           
  3172                           ;lcd.c: 892: {
  3173                           ;lcd.c: 894: (((PORTD)) &= ~(1<<((2))));
  3174  043B  30FB               	movlw	251
  3175  043C  00F2               	movwf	??_lcd_BusyCheck
  3176  043D  0872               	movf	??_lcd_BusyCheck,w
  3177  043E  0588               	andwf	8,f	;volatile
  3178                           
  3179                           ;lcd.c: 895: DELAY_us(10);
  3180  043F  300A               	movlw	10
  3181  0440  00F0               	movwf	DELAY_us@us_count
  3182  0441  3000               	movlw	0
  3183  0442  00F1               	movwf	DELAY_us@us_count+1
  3184  0443  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  3185                           
  3186                           ;lcd.c: 896: (((PORTD)) |= (1<<((2))));
  3187  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3189  044A  1508               	bsf	8,2	;volatile
  3190                           
  3191                           ;lcd.c: 897: DELAY_us(10);
  3192  044B  300A               	movlw	10
  3193  044C  00F0               	movwf	DELAY_us@us_count
  3194  044D  3000               	movlw	0
  3195  044E  00F1               	movwf	DELAY_us@us_count+1
  3196  044F  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  3197  0454                     l1212:	
  3198                           
  3199                           ;lcd.c: 898: }
  3200                           ;lcd.c: 899: }while(busyflag);
  3201  0454  08F3               	movf	lcd_BusyCheck@busyflag,f
  3202  0455  1D03               	skipz
  3203  0456  2C14               	goto	l204
  3204                           
  3205                           ;lcd.c: 901: ((0x00u)? ((TRISB) |= (1<<(7))): ((TRISB) &= ~(1<<(7))));
  3206  0457  307F               	movlw	127
  3207  0458  00F2               	movwf	??_lcd_BusyCheck
  3208  0459  0872               	movf	??_lcd_BusyCheck,w
  3209  045A  1683               	bsf	3,5	;RP0=1, select bank1
  3210  045B  1303               	bcf	3,6	;RP1=0, select bank1
  3211  045C  0586               	andwf	6,f	;volatile
  3212  045D  0008               	return
  3213  045E                     __end_of_lcd_BusyCheck:	
  3214                           
  3215                           	psect	text18
  3216  02D9                     __ptext18:	
  3217 ;; *************** function _EEPROM_WriteNBytes *****************
  3218 ;; Defined at:
  3219 ;;		line 111 in file "eeprom.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  var_eepromAd    2    5[COMMON] unsigned int 
  3222 ;;  ptr_ramAddre    1    7[COMMON] PTR unsigned char 
  3223 ;;		 -> main@var_writeNumber_u32(4), main@var_writeNumber_u16(2), 
  3224 ;;  var_numOfByt    2    8[COMMON] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;		None               void
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         5       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          1       0       0       0       0
  3239 ;;      Totals:         6       0       0       0       0
  3240 ;;Total ram usage:        6 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    2
  3243 ;; This function calls:
  3244 ;;		_EEPROM_WriteByte
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _EEPROM_WriteNBytes
  3252  02D9                     _EEPROM_WriteNBytes:	
  3253  02D9                     l1462:	
  3254                           ;eeprom.c: 113: while(var_numOfBytes_u16 != 0)
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _EEPROM_WriteNBytes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3258                           
  3259  02D9  0879               	movf	EEPROM_WriteNBytes@var_numOfBytes_u16+1,w
  3260  02DA  0478               	iorwf	EEPROM_WriteNBytes@var_numOfBytes_u16,w
  3261  02DB  1903               	btfsc	3,2
  3262  02DC  0008               	return
  3263                           
  3264                           ;eeprom.c: 114: {
  3265                           ;eeprom.c: 115: EEPROM_WriteByte(var_eepromAddress_u16,*ptr_ramAddress_u8);
  3266  02DD  0876               	movf	EEPROM_WriteNBytes@var_eepromAddress_u16+1,w
  3267  02DE  01F3               	clrf	EEPROM_WriteByte@var_eepromAddress_u16+1
  3268  02DF  07F3               	addwf	EEPROM_WriteByte@var_eepromAddress_u16+1,f
  3269  02E0  0875               	movf	EEPROM_WriteNBytes@var_eepromAddress_u16,w
  3270  02E1  01F2               	clrf	EEPROM_WriteByte@var_eepromAddress_u16
  3271  02E2  07F2               	addwf	EEPROM_WriteByte@var_eepromAddress_u16,f
  3272  02E3  0877               	movf	EEPROM_WriteNBytes@ptr_ramAddress_u8,w
  3273  02E4  0084               	movwf	4
  3274  02E5  1383               	bcf	3,7	;select IRP bank0
  3275  02E6  0800               	movf	0,w
  3276  02E7  00FA               	movwf	??_EEPROM_WriteNBytes
  3277  02E8  087A               	movf	??_EEPROM_WriteNBytes,w
  3278  02E9  00F4               	movwf	EEPROM_WriteByte@var_eepromData_u8
  3279  02EA  120A  118A  224F  120A  118A  	fcall	_EEPROM_WriteByte
  3280                           
  3281                           ;eeprom.c: 116: var_eepromAddress_u16++;
  3282  02EF  3001               	movlw	1
  3283  02F0  07F5               	addwf	EEPROM_WriteNBytes@var_eepromAddress_u16,f
  3284  02F1  1803               	skipnc
  3285  02F2  0AF6               	incf	EEPROM_WriteNBytes@var_eepromAddress_u16+1,f
  3286  02F3  3000               	movlw	0
  3287  02F4  07F6               	addwf	EEPROM_WriteNBytes@var_eepromAddress_u16+1,f
  3288                           
  3289                           ;eeprom.c: 117: ptr_ramAddress_u8++;
  3290  02F5  3001               	movlw	1
  3291  02F6  00FA               	movwf	??_EEPROM_WriteNBytes
  3292  02F7  087A               	movf	??_EEPROM_WriteNBytes,w
  3293  02F8  07F7               	addwf	EEPROM_WriteNBytes@ptr_ramAddress_u8,f
  3294                           
  3295                           ;eeprom.c: 118: var_numOfBytes_u16--;
  3296  02F9  3001               	movlw	1
  3297  02FA  02F8               	subwf	EEPROM_WriteNBytes@var_numOfBytes_u16,f
  3298  02FB  3000               	movlw	0
  3299  02FC  1C03               	skipc
  3300  02FD  03F9               	decf	EEPROM_WriteNBytes@var_numOfBytes_u16+1,f
  3301  02FE  02F9               	subwf	EEPROM_WriteNBytes@var_numOfBytes_u16+1,f
  3302  02FF  2AD9               	goto	l1462
  3303  0300                     __end_of_EEPROM_WriteNBytes:	
  3304                           
  3305                           	psect	text19
  3306  024F                     __ptext19:	
  3307 ;; *************** function _EEPROM_WriteByte *****************
  3308 ;; Defined at:
  3309 ;;		line 57 in file "eeprom.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  var_eepromAd    2    2[COMMON] unsigned int 
  3312 ;;  var_eepromDa    1    4[COMMON] unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;		None               void
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         3       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         3       0       0       0       0
  3328 ;;Total ram usage:        3 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    1
  3331 ;; This function calls:
  3332 ;;		_DELAY_us
  3333 ;; This function is called by:
  3334 ;;		_EEPROM_WriteNBytes
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _EEPROM_WriteByte
  3340  024F                     _EEPROM_WriteByte:	
  3341  024F                     l35:	
  3342                           ;eeprom.c: 59: while(RD || WR);
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  3346                           
  3347  024F  1683               	bsf	3,5	;RP0=1, select bank3
  3348  0250  1703               	bsf	3,6	;RP1=1, select bank3
  3349  0251  180C               	btfsc	12,0	;volsfr
  3350  0252  2A4F               	goto	l35
  3351  0253  188C               	btfsc	12,1	;volsfr
  3352  0254  2A4F               	goto	l35
  3353                           
  3354                           ;eeprom.c: 60: EEADR=var_eepromAddress_u16;
  3355  0255  0872               	movf	EEPROM_WriteByte@var_eepromAddress_u16,w
  3356  0256  1283               	bcf	3,5	;RP0=0, select bank2
  3357  0257  1703               	bsf	3,6	;RP1=1, select bank2
  3358  0258  008D               	movwf	13	;volatile
  3359                           
  3360                           ;eeprom.c: 62: EEDATA=var_eepromData_u8;
  3361  0259  0874               	movf	EEPROM_WriteByte@var_eepromData_u8,w
  3362  025A  008C               	movwf	12	;volatile
  3363                           
  3364                           ;eeprom.c: 63: WREN=1;
  3365  025B  1683               	bsf	3,5	;RP0=1, select bank3
  3366  025C  1703               	bsf	3,6	;RP1=1, select bank3
  3367  025D  150C               	bsf	12,2	;volsfr
  3368                           
  3369                           ;eeprom.c: 64: EECON2=0x55;
  3370  025E  3055               	movlw	85
  3371  025F  008D               	movwf	13	;volsfr
  3372                           
  3373                           ;eeprom.c: 65: EECON2=0xaa;
  3374  0260  30AA               	movlw	170
  3375  0261  008D               	movwf	13	;volsfr
  3376                           
  3377                           ;eeprom.c: 66: WR=1;
  3378  0262  148C               	bsf	12,1	;volsfr
  3379                           
  3380                           ;eeprom.c: 67: DELAY_us(10);
  3381  0263  300A               	movlw	10
  3382  0264  00F0               	movwf	DELAY_us@us_count
  3383  0265  3000               	movlw	0
  3384  0266  00F1               	movwf	DELAY_us@us_count+1
  3385  0267  120A  118A  2170   	fcall	_DELAY_us
  3386                           
  3387                           ;eeprom.c: 68: WREN=0;
  3388  026A  1683               	bsf	3,5	;RP0=1, select bank3
  3389  026B  1703               	bsf	3,6	;RP1=1, select bank3
  3390  026C  110C               	bcf	12,2	;volsfr
  3391  026D  0008               	return
  3392  026E                     __end_of_EEPROM_WriteByte:	
  3393                           
  3394                           	psect	text20
  3395  028D                     __ptext20:	
  3396 ;; *************** function _EEPROM_ReadNBytes *****************
  3397 ;; Defined at:
  3398 ;;		line 141 in file "eeprom.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  var_eepromAd    2    4[COMMON] unsigned int 
  3401 ;;  ptr_ramAddre    1    6[COMMON] PTR unsigned char 
  3402 ;;		 -> main@var_readNumber_u32(4), main@var_readNumber_u16(2), 
  3403 ;;  var_numOfByt    2    7[COMMON] unsigned int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         5       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          1       0       0       0       0
  3418 ;;      Totals:         6       0       0       0       0
  3419 ;;Total ram usage:        6 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    2
  3422 ;; This function calls:
  3423 ;;		_EEPROM_ReadByte
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _EEPROM_ReadNBytes
  3431  028D                     _EEPROM_ReadNBytes:	
  3432  028D                     l1474:	
  3433                           ;eeprom.c: 143: while(var_numOfBytes_u16 != 0)
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _EEPROM_ReadNBytes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3437                           
  3438  028D  0878               	movf	EEPROM_ReadNBytes@var_numOfBytes_u16+1,w
  3439  028E  0477               	iorwf	EEPROM_ReadNBytes@var_numOfBytes_u16,w
  3440  028F  1903               	btfsc	3,2
  3441  0290  0008               	return
  3442                           
  3443                           ;eeprom.c: 144: {
  3444                           ;eeprom.c: 145: *ptr_ramAddress_u8 = EEPROM_ReadByte(var_eepromAddress_16);
  3445  0291  0875               	movf	EEPROM_ReadNBytes@var_eepromAddress_16+1,w
  3446  0292  01F3               	clrf	EEPROM_ReadByte@var_eepromAddress_u16+1
  3447  0293  07F3               	addwf	EEPROM_ReadByte@var_eepromAddress_u16+1,f
  3448  0294  0874               	movf	EEPROM_ReadNBytes@var_eepromAddress_16,w
  3449  0295  01F2               	clrf	EEPROM_ReadByte@var_eepromAddress_u16
  3450  0296  07F2               	addwf	EEPROM_ReadByte@var_eepromAddress_u16,f
  3451  0297  120A  118A  2202  120A  118A  	fcall	_EEPROM_ReadByte
  3452  029C  00F9               	movwf	??_EEPROM_ReadNBytes
  3453  029D  0876               	movf	EEPROM_ReadNBytes@ptr_ramAddress_u8,w
  3454  029E  0084               	movwf	4
  3455  029F  0879               	movf	??_EEPROM_ReadNBytes,w
  3456  02A0  1383               	bcf	3,7	;select IRP bank0
  3457  02A1  0080               	movwf	0
  3458                           
  3459                           ;eeprom.c: 146: var_eepromAddress_16++;
  3460  02A2  3001               	movlw	1
  3461  02A3  07F4               	addwf	EEPROM_ReadNBytes@var_eepromAddress_16,f
  3462  02A4  1803               	skipnc
  3463  02A5  0AF5               	incf	EEPROM_ReadNBytes@var_eepromAddress_16+1,f
  3464  02A6  3000               	movlw	0
  3465  02A7  07F5               	addwf	EEPROM_ReadNBytes@var_eepromAddress_16+1,f
  3466                           
  3467                           ;eeprom.c: 147: ptr_ramAddress_u8++;
  3468  02A8  3001               	movlw	1
  3469  02A9  00F9               	movwf	??_EEPROM_ReadNBytes
  3470  02AA  0879               	movf	??_EEPROM_ReadNBytes,w
  3471  02AB  07F6               	addwf	EEPROM_ReadNBytes@ptr_ramAddress_u8,f
  3472                           
  3473                           ;eeprom.c: 148: var_numOfBytes_u16--;
  3474  02AC  3001               	movlw	1
  3475  02AD  02F7               	subwf	EEPROM_ReadNBytes@var_numOfBytes_u16,f
  3476  02AE  3000               	movlw	0
  3477  02AF  1C03               	skipc
  3478  02B0  03F8               	decf	EEPROM_ReadNBytes@var_numOfBytes_u16+1,f
  3479  02B1  02F8               	subwf	EEPROM_ReadNBytes@var_numOfBytes_u16+1,f
  3480  02B2  2A8D               	goto	l1474
  3481  02B3                     __end_of_EEPROM_ReadNBytes:	
  3482                           
  3483                           	psect	text21
  3484  0202                     __ptext21:	
  3485 ;; *************** function _EEPROM_ReadByte *****************
  3486 ;; Defined at:
  3487 ;;		line 84 in file "eeprom.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  var_eepromAd    2    2[COMMON] unsigned int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, pclath, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3501 ;;      Params:         2       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    1
  3508 ;; This function calls:
  3509 ;;		_DELAY_us
  3510 ;; This function is called by:
  3511 ;;		_EEPROM_ReadNBytes
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           
  3516                           ;psect for function _EEPROM_ReadByte
  3517  0202                     _EEPROM_ReadByte:	
  3518  0202                     l41:	
  3519                           ;eeprom.c: 86: while(RD || WR);
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  3523                           
  3524  0202  1683               	bsf	3,5	;RP0=1, select bank3
  3525  0203  1703               	bsf	3,6	;RP1=1, select bank3
  3526  0204  180C               	btfsc	12,0	;volsfr
  3527  0205  2A02               	goto	l41
  3528  0206  188C               	btfsc	12,1	;volsfr
  3529  0207  2A02               	goto	l41
  3530                           
  3531                           ;eeprom.c: 87: EEADR=var_eepromAddress_u16;
  3532  0208  0872               	movf	EEPROM_ReadByte@var_eepromAddress_u16,w
  3533  0209  1283               	bcf	3,5	;RP0=0, select bank2
  3534  020A  1703               	bsf	3,6	;RP1=1, select bank2
  3535  020B  008D               	movwf	13	;volatile
  3536                           
  3537                           ;eeprom.c: 89: RD = 1;
  3538  020C  1683               	bsf	3,5	;RP0=1, select bank3
  3539  020D  1703               	bsf	3,6	;RP1=1, select bank3
  3540  020E  140C               	bsf	12,0	;volsfr
  3541                           
  3542                           ;eeprom.c: 90: DELAY_us(50);
  3543  020F  3032               	movlw	50
  3544  0210  00F0               	movwf	DELAY_us@us_count
  3545  0211  3000               	movlw	0
  3546  0212  00F1               	movwf	DELAY_us@us_count+1
  3547  0213  120A  118A  2170   	fcall	_DELAY_us
  3548                           
  3549                           ;eeprom.c: 91: return(EEDATA);
  3550  0216  1283               	bcf	3,5	;RP0=0, select bank2
  3551  0217  1703               	bsf	3,6	;RP1=1, select bank2
  3552  0218  080C               	movf	12,w	;volatile
  3553  0219  0008               	return
  3554  021A                     __end_of_EEPROM_ReadByte:	
  3555                           
  3556                           	psect	text22
  3557  01AD                     __ptext22:	
  3558 ;; *************** function _DELAY_sec *****************
  3559 ;; Defined at:
  3560 ;;		line 102 in file "delay.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  sec_count       2    4[COMMON] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;		None               void
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3574 ;;      Params:         2       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0
  3577 ;;      Totals:         2       0       0       0       0
  3578 ;;Total ram usage:        2 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    2
  3581 ;; This function calls:
  3582 ;;		_DELAY_ms
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _DELAY_sec
  3590  01AD                     _DELAY_sec:	
  3591  01AD                     l1450:	
  3592                           ;delay.c: 106: while(sec_count!=0)
  3593                           
  3594                           ;incstack = 0
  3595                           ; Regs used in _DELAY_sec: [wreg+status,2+status,0+pclath+cstack]
  3596                           
  3597  01AD  0875               	movf	DELAY_sec@sec_count+1,w
  3598  01AE  0474               	iorwf	DELAY_sec@sec_count,w
  3599  01AF  1903               	btfsc	3,2
  3600  01B0  0008               	return
  3601                           
  3602                           ;delay.c: 107: {
  3603                           ;delay.c: 108: DELAY_ms(1000);
  3604  01B1  30E8               	movlw	232
  3605  01B2  00F2               	movwf	DELAY_ms@ms_count
  3606  01B3  3003               	movlw	3
  3607  01B4  00F3               	movwf	DELAY_ms@ms_count+1
  3608  01B5  120A  118A  2199  120A  118A  	fcall	_DELAY_ms
  3609                           
  3610                           ;delay.c: 109: sec_count--;
  3611  01BA  3001               	movlw	1
  3612  01BB  02F4               	subwf	DELAY_sec@sec_count,f
  3613  01BC  3000               	movlw	0
  3614  01BD  1C03               	skipc
  3615  01BE  03F5               	decf	DELAY_sec@sec_count+1,f
  3616  01BF  02F5               	subwf	DELAY_sec@sec_count+1,f
  3617  01C0  29AD               	goto	l1450
  3618  01C1                     __end_of_DELAY_sec:	
  3619                           
  3620                           	psect	text23
  3621  0199                     __ptext23:	
  3622 ;; *************** function _DELAY_ms *****************
  3623 ;; Defined at:
  3624 ;;		line 76 in file "delay.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  ms_count        2    2[COMMON] unsigned int 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         2       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         2       0       0       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    1
  3645 ;; This function calls:
  3646 ;;		_DELAY_us
  3647 ;; This function is called by:
  3648 ;;		_DELAY_sec
  3649 ;;		_LCD_Init
  3650 ;;		_lcd_Reset
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           
  3655                           ;psect for function _DELAY_ms
  3656  0199                     _DELAY_ms:	
  3657  0199                     l1300:	
  3658                           ;delay.c: 78: while(ms_count!=0)
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  3662                           
  3663  0199  0873               	movf	DELAY_ms@ms_count+1,w
  3664  019A  0472               	iorwf	DELAY_ms@ms_count,w
  3665  019B  1903               	btfsc	3,2
  3666  019C  0008               	return
  3667                           
  3668                           ;delay.c: 79: {
  3669                           ;delay.c: 80: DELAY_us(300u);
  3670  019D  302C               	movlw	44
  3671  019E  00F0               	movwf	DELAY_us@us_count
  3672  019F  3001               	movlw	1
  3673  01A0  00F1               	movwf	DELAY_us@us_count+1
  3674  01A1  120A  118A  2170  120A  118A  	fcall	_DELAY_us
  3675                           
  3676                           ;delay.c: 81: ms_count--;
  3677  01A6  3001               	movlw	1
  3678  01A7  02F2               	subwf	DELAY_ms@ms_count,f
  3679  01A8  3000               	movlw	0
  3680  01A9  1C03               	skipc
  3681  01AA  03F3               	decf	DELAY_ms@ms_count+1,f
  3682  01AB  02F3               	subwf	DELAY_ms@ms_count+1,f
  3683  01AC  2999               	goto	l1300
  3684  01AD                     __end_of_DELAY_ms:	
  3685                           
  3686                           	psect	text24
  3687  0170                     __ptext24:	
  3688 ;; *************** function _DELAY_us *****************
  3689 ;; Defined at:
  3690 ;;		line 55 in file "delay.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  us_count        2    0[COMMON] unsigned int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;		None               void
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         2       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         2       0       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_DELAY_ms
  3714 ;;		_EEPROM_WriteByte
  3715 ;;		_EEPROM_ReadByte
  3716 ;;		_lcd_BusyCheck
  3717 ;;		_lcd_Reset
  3718 ;;		_lcd_SendCmdSignals
  3719 ;;		_lcd_SendDataSignals
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _DELAY_us
  3725  0170                     _DELAY_us:	
  3726  0170                     l1186:	
  3727                           ;delay.c: 57: while(us_count!=0)
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  3731                           
  3732  0170  0871               	movf	DELAY_us@us_count+1,w
  3733  0171  0470               	iorwf	DELAY_us@us_count,w
  3734  0172  1903               	btfsc	3,2
  3735  0173  0008               	return
  3736                           
  3737                           ;delay.c: 58: {
  3738                           ;delay.c: 59: us_count--;
  3739  0174  3001               	movlw	1
  3740  0175  02F0               	subwf	DELAY_us@us_count,f
  3741  0176  3000               	movlw	0
  3742  0177  1C03               	skipc
  3743  0178  03F1               	decf	DELAY_us@us_count+1,f
  3744  0179  02F1               	subwf	DELAY_us@us_count+1,f
  3745  017A  2970               	goto	l1186
  3746  017B                     __end_of_DELAY_us:	
  3747  007E                     btemp	set	126	;btemp
  3748  007E                     wtemp	set	126
  3749  007E                     wtemp0	set	126
  3750  0080                     wtemp1	set	128
  3751  0082                     wtemp2	set	130
  3752  0084                     wtemp3	set	132
  3753  0086                     wtemp4	set	134
  3754  0088                     wtemp5	set	136
  3755  007F                     wtemp6	set	127
  3756  007E                     ttemp	set	126
  3757  007E                     ttemp0	set	126
  3758  0081                     ttemp1	set	129
  3759  0084                     ttemp2	set	132
  3760  0087                     ttemp3	set	135
  3761  007F                     ttemp4	set	127
  3762  007E                     ltemp	set	126
  3763  007E                     ltemp0	set	126
  3764  0082                     ltemp1	set	130
  3765  0086                     ltemp2	set	134
  3766  0080                     ltemp3	set	128


Data Sizes:
    Strings     78
    Constant    0
    Data        5
    BSS         2
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(1) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), 

    LCD_Printf@ptr	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), 

    LCD_Printf@argp	PTR void [1] size(1) Largest target is 0
		 -> ?_LCD_Printf(BANK0[0]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR unsigned char  size(1) Largest target is 27
		 -> STR_4(CODE[27]), STR_1(CODE[27]), 

    EEPROM_ReadNBytes@ptr_ramAddress_u8	PTR unsigned char  size(1) Largest target is 4
		 -> main@var_readNumber_u32(BANK0[4]), main@var_readNumber_u16(BANK0[2]), 

    EEPROM_WriteNBytes@ptr_ramAddress_u8	PTR unsigned char  size(1) Largest target is 4
		 -> main@var_writeNumber_u32(BANK0[4]), main@var_writeNumber_u16(BANK0[2]), 


Critical Paths under _main in COMMON

    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayDecimalNumber->___lldiv
    ___bmul->___lldiv
    _LCD_DisplayChar->_LCD_GoToNextLine
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_SendDataSignals->_DELAY_us
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_DELAY_ms
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _lcd_SendCmdSignals->_DELAY_us
    _lcd_BusyCheck->_DELAY_us
    _EEPROM_WriteNBytes->_EEPROM_WriteByte
    _EEPROM_WriteByte->_DELAY_us
    _EEPROM_ReadNBytes->_EEPROM_ReadByte
    _EEPROM_ReadByte->_DELAY_us
    _DELAY_sec->_DELAY_ms
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_LCD_Printf
    _LCD_Printf->_LCD_DisplayDecimalNumber
    _LCD_DisplayDecimalNumber->___bmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   31165
                                             49 BANK0     14    14      0
                          _DELAY_sec
                  _EEPROM_ReadNBytes
                 _EEPROM_WriteNBytes
                          _LCD_Clear
                  _LCD_DisplayString
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          27    23      4   11965
                                             22 BANK0     27    23      4
                    _LCD_DisplayChar
           _LCD_DisplayDecimalNumber
                  _LCD_DisplayString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     2      0    3182
                                              9 COMMON     2     2      0
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayDecimalNumber                            18    13      5    4528
                                              4 BANK0     18    13      5
                    _LCD_DisplayChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      2     2      0    3056
                                              7 COMMON     2     2      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        2     2      0    1495
                                              4 COMMON     2     2      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
                     _lcd_SendNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  1     1      0     659
                                              2 COMMON     1     1      0
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     1     1      0    1495
                                              6 COMMON     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     2      2    7877
                                              8 COMMON     4     2      2
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    2247
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
                     _lcd_SendNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    3056
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         2     2      0    1561
                                              6 COMMON     2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         2     2      0    1495
                                              4 COMMON     2     2      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
                     _lcd_SendNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendNibble                                       2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   1     1      0     659
                                              2 COMMON     1     1      0
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        2     2      0     682
                                              2 COMMON     2     2      0
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteNBytes                                   6     1      5    1196
                                              5 COMMON     6     1      5
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     3     0      3     809
                                              2 COMMON     3     0      3
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadNBytes                                    6     1      5    1121
                                              4 COMMON     6     1      5
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     734
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _DELAY_sec                                            2     0      2    1023
                                              4 COMMON     2     0      2
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2     841
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     659
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_sec
     _DELAY_ms
       _DELAY_us
   _EEPROM_ReadNBytes
     _EEPROM_ReadByte
       _DELAY_us
   _EEPROM_WriteNBytes
     _EEPROM_WriteByte
       _DELAY_us
   _LCD_Clear
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
       _lcd_SendNibble
     _LCD_GoToLine
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
         _lcd_SendNibble
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_us
           _lcd_SendCmdSignals
             _DELAY_us
           _lcd_SendNibble
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_us
         _lcd_SendDataSignals
           _DELAY_us
         _lcd_SendNibble
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
       _lcd_SendNibble
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_us
         _lcd_SendCmdSignals
           _DELAY_us
         _lcd_SendNibble
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_us
           _lcd_SendCmdSignals
             _DELAY_us
           _lcd_SendNibble
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
       _lcd_SendNibble
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
       _lcd_SendNibble
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_us
           _lcd_SendCmdSignals
             _DELAY_us
           _lcd_SendNibble
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_us
         _lcd_SendDataSignals
           _DELAY_us
         _lcd_SendNibble
     _LCD_DisplayDecimalNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_us
             _lcd_SendCmdSignals
               _DELAY_us
             _lcd_SendNibble
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_us
           _lcd_SendDataSignals
             _DELAY_us
           _lcd_SendNibble
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_us
             _lcd_SendCmdSignals
               _DELAY_us
             _lcd_SendNibble
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_us
           _lcd_SendDataSignals
             _DELAY_us
           _lcd_SendNibble
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3F      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      57      12        0.0%
ABS                  0      0      57       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Feb 15 07:39:24 2015

                                                  pc 0002                                       ___bmul@product 0022  
                                        __CFG_CP$OFF 0000                                        ?_LCD_CmdWrite 0070  
                                                 l41 0202                                                   l35 024F  
                                                 _RD 0C60                 EEPROM_WriteNBytes@var_numOfBytes_u16 0078  
                                                 _WR 0C61                                          ?_LCD_Printf 0036  
                                                 fsr 0004                                        ?_LCD_GoToLine 0070  
                         __size_of_EEPROM_ReadNBytes 0026                                          __CFG_LVP$ON 0000  
                                                l103 0400                                                  l204 0414  
                                 __size_of_DELAY_sec 0014                                                  l177 0705  
                                                l258 063A                                         __CFG_CPD$OFF 0000  
                                                u805 0480                                                  u655 0326  
                                                u815 0495                                                  u825 04A7  
                                                u695 035C                                                  u785 0472  
                                                fsr0 0004                                                  indf 0000  
                                 DELAY_sec@sec_count 0074                  EEPROM_WriteNBytes@ptr_ramAddress_u8 0077  
                                      _STK_LCDConfig 0064                                         __CFG_FOSC$HS 0000  
                            __end_of_LCD_DisplayChar 028D                                                 l1300 0199  
                                               l1212 0454                                                 l1230 02BA  
                                               l1232 02C0                                                 l1242 02CC  
                                               l1314 0279                                                 l1402 0234  
                                               l1244 02D0                                                 l1236 02C4  
                                               l1316 027E                                                 l1324 018A  
                                               l1238 02C8                                                 l1414 04C6  
                                               l1248 02D4                                                 l1280 01E3  
                                               l1328 0190                                                 l1344 046E  
                                               l1600 07D1                                                 l1186 0170  
                                               l1450 01AD                                                 l1258 0312  
                                               l1290 0348                                                 l1354 04A6  
                                               l1346 047E                                                 l1434 053B  
                                               l1426 052E                                                 l1442 0550  
                                               l1418 04D8                                                 l1602 07D7  
                                               l1522 0675                                                 l1436 04D9  
                                               l1604 0646                                                 l1462 02D9  
                                               l1358 04B3                                                 l1438 0540  
                                               l1534 06AE                                                 l1526 069D  
                                               l1544 06C9                                                 l1528 06A2  
                                               l1474 028D                                                 l1562 0737  
                                               l1546 06DE                                                 l1580 076B  
                                               l1572 0760                                                 l1556 0719  
                                               l1494 03EF                                                 l1488 03DE  
                                               l1584 077B                                                 l1576 0761  
                                               l1568 075D                                                 l1594 079D  
                                               l1588 078B                                                 l1598 079F  
                                               STR_1 0024                                                 STR_2 0051  
                                               STR_3 004B                                                 STR_4 0009  
                                               STR_5 0045                                                 STR_6 003F  
                                               _WREN 0C62                                         __CFG_WRT$OFF 0000  
                                               _main 0554                                   __size_of_LCD_Clear 000B  
                                               btemp 007E                                                 ltemp 007E  
                                               start 0000                                                 ttemp 007E  
                                               wtemp 007E                                     __end_of_DELAY_ms 01AD  
                                   __end_of_DELAY_us 017B                             __size_of_EEPROM_ReadByte 0018  
                                  ___bmul@multiplier 0023                                       ??_LCD_CmdWrite 0074  
                                     ??_LCD_GoToLine 0076                                     __end_of_LCD_Init 040A  
                                   lcd_DataWrite@dat 0075                                                ?_main 0070  
                                              _EEADR 010D                                        __CFG_WDTE$OFF 0000  
                                    __end_of___lldiv 04BC                                                _PORTB 0006  
                                              _PORTD 0008                                                _TRISB 0086  
                                              _TRISD 0088  LCD_DisplayDecimalNumber@var_numOfDigitsToDisplay_u8 0028  
                 EEPROM_ReadNBytes@ptr_ramAddress_u8 0076                LCD_DisplayString@ptr_stringPointer_u8 007A  
                  __size_of_LCD_DisplayDecimalNumber 0098                                       __CFG_BOREN$OFF 0000  
                                              pclath 000A                            ?_LCD_DisplayDecimalNumber 0024  
                                              ltemp0 007E                                                ltemp1 0082  
                                              ltemp2 0086                                                ltemp3 0080  
                                __size_of_LCD_Printf 01A3                                                ttemp0 007E  
                                              ttemp1 0081                                                ttemp2 0084  
                                              ttemp3 0087                                                ttemp4 007F  
                                              status 0003                                                wtemp0 007E  
                                              wtemp1 0080                                                wtemp2 0082  
                                              wtemp3 0084                                                wtemp4 0086  
                                              wtemp5 0088                                                wtemp6 007F  
                                  __end_of_DELAY_sec 01C1                                      __initialization 07DE  
                                       __end_of_main 063B                            LCD_CmdWrite@var_lcdCmd_u8 0075  
                                             ??_main 0051                          __size_of_lcd_SendCmdSignals 0019  
                                  __end_of_LCD_Clear 0186                  EEPROM_ReadNBytes@var_numOfBytes_u16 0077  
          LCD_DisplayDecimalNumber@var_DecNumber_u32 0024                                LCD_Printf@var_num_s16 004B  
                              LCD_Printf@var_num_s32 0047                                LCD_Printf@var_num_u16 0044  
                              LCD_Printf@var_num_u32 0040                               main@var_readNumber_u16 0057  
                             main@var_readNumber_u32 0053                                     ?_LCD_DisplayChar 0070  
                                       LCD_Printf@ch 004F                                               _EEDATA 010C  
                                             _EECON2 018D                                    lcd_SendNibble@var 0071  
                         LCD_Printf@var_floatNum_f32 003C                                lcd_BusyCheck@busyflag 0073  
                                     __CFG_PWRTE$OFF 0000                                               ___bmul 0186  
                                          ??___lldiv 0078                                    ??_EEPROM_ReadByte 0074  
                           __end_of_EEPROM_WriteByte 026E                                     DELAY_ms@ms_count 0072  
                                  ?_LCD_GoToNextLine 0070                                            ?_DELAY_ms 0072  
                                          ?_DELAY_us 0070                                   ??_LCD_GoToNextLine 0076  
                               __end_of_LCD_CmdWrite 0336                                 __end_of_LCD_GoToLine 01D6  
                            __end_of__initialization 07FC                                            ?_LCD_Init 0078  
                                ___bmul@multiplicand 0020                                       __pcstackCOMMON 0070  
                                       __pidataBANK0 016B                                __end_of_lcd_DataWrite 036C  
                                       ??_LCD_Printf 003A                                   __size_of_lcd_Reset 004F  
                       __size_of_lcd_SendDataSignals 0016                                           ??_DELAY_ms 0074  
                                         ??_DELAY_us 0072                        LCD_DisplayChar@var_lcdData_u8 0078  
                                         __pbssBANK0 0067                                __end_of_lcd_BusyCheck 045E  
                        __size_of_EEPROM_WriteNBytes 0027                                           ??_LCD_Init 007A  
                                 __end_of_LCD_Printf 07DE                                           __pmaintext 0554  
                                            ?___bmul 0020                                        LCD_Printf@ptr 004D  
                                      LCD_Printf@str 003F                     __end_of_LCD_DisplayDecimalNumber 0554  
                                   DELAY_us@us_count 0070                                           __stringtab 0003  
                                  __end_of_lcd_Reset 03BB                                            _DELAY_sec 01AD  
                                    __size_of___bmul 0013                                              ___lldiv 045E  
                            __size_of_lcd_SendNibble 0026                                              __ptext1 063B  
                                            __ptext2 0233                                              __ptext3 04BC  
                                            __ptext4 045E                                              __ptext5 0186  
                                            __ptext6 026E                                              __ptext7 0336  
                                            __ptext8 01EC                                              __ptext9 01D6  
                              __size_of_LCD_CmdWrite 0036                                __size_of_LCD_GoToLine 0015  
                                          _LCD_Clear 017B                                 end_of_initialization 07FC  
                                    _EEPROM_ReadByte 0202                                      ___lldiv@divisor 0070  
                                    ___lldiv@counter 007D                                           ?_DELAY_sec 0074  
              EEPROM_ReadNBytes@var_eepromAddress_16 0074                           __end_of_lcd_SendCmdSignals 0233  
                                       _LCD_CmdWrite 0300                EEPROM_WriteByte@var_eepromAddress_u16 0072  
                                       _LCD_GoToLine 01C1                                    ?_EEPROM_WriteByte 0072  
                                 ??_EEPROM_WriteByte 0075                             _LCD_DisplayDecimalNumber 04BC  
                                         ?_LCD_Clear 0070                        LCD_GoToLine@var_lineNumber_u8 0077  
                                  __size_of_DELAY_ms 0014                                    __size_of_DELAY_us 000B  
                           __size_of_LCD_DisplayChar 001F                                    __size_of_LCD_Init 004F  
                          __size_of_LCD_GoToNextLine 0016                                  _lcd_SendDataSignals 01EC  
                                     __end_of___bmul 0199                       LCD_Init@var_MaxCharsPerLine_u8 0079  
                                  LCD_Printf@argList 0046                             _ARR_LcdLineNumAddress_U8 005F  
                                start_initialization 07DE                                 ?_lcd_SendDataSignals 0070  
                            __end_of_EEPROM_ReadByte 021A                             _VAR_LcdTrackCursorPos_U8 0067  
                                        ??_DELAY_sec 0076                                             ??___bmul 0021  
                                        __pdataBANK0 005F                                       _lcd_SendNibble 02B3  
                        LCD_Init@var_lcdNoOfLines_u8 0078                   LCD_Printf@var_numOfDigitsToDisp_u8 004E  
                              ??_lcd_SendDataSignals 0072                                            ___latbits 0002  
                                      __pcstackBANK0 0020                                          ??_LCD_Clear 0078  
                                __end_of__stringdata 0057                           __end_of_EEPROM_WriteNBytes 0300  
                             LCD_Init@var_lcdMode_u8 007B                               __size_of_lcd_DataWrite 0036  
                            main@var_writeNumber_u16 005D                              main@var_writeNumber_u32 0059  
                                          __pnvBANK0 0064                               __end_of_lcd_SendNibble 02D9  
                                           ?___lldiv 0070                                            _lcd_Reset 036C  
                                  ??_LCD_DisplayChar 0077                                            __pstrings 0003  
                             __size_of_lcd_BusyCheck 0054                                       LCD_Printf@argp 0050  
                                  _LCD_DisplayString 0233                                             _DELAY_ms 0199  
                                           _DELAY_us 0170                                   ?_LCD_DisplayString 0070  
                                   ?_EEPROM_ReadByte 0072                                             _LCD_Init 03BB  
                                ??_LCD_DisplayString 0079                                     _LCD_GoToNextLine 01D6  
                                    ?_lcd_SendNibble 0070                                           ?_lcd_Reset 0070  
                                      _lcd_DataWrite 0336                           ??_LCD_DisplayDecimalNumber 0029  
                                        __stringbase 0008                                          __stringdata 0009  
                          __end_of_LCD_DisplayString 024F                                   _lcd_SendCmdSignals 021A  
               EEPROM_ReadByte@var_eepromAddress_u16 0072              EEPROM_WriteNBytes@var_eepromAddress_u16 0075  
                                      _lcd_BusyCheck 040A                            __size_of_EEPROM_WriteByte 001F  
                                ?_lcd_SendCmdSignals 0070                                       ?_lcd_DataWrite 0070  
                                   __size_of___lldiv 005E                                   __end_of__stringtab 0009  
                               ??_lcd_SendCmdSignals 0072                                    _EEPROM_ReadNBytes 028D  
                                 ?_EEPROM_ReadNBytes 0074                                             __ptext10 03BB  
                                           __ptext11 036C                                             __ptext20 028D  
                                           __ptext12 017B                                             __ptext21 0202  
                                           __ptext13 01C1                                             __ptext22 01AD  
                                           __ptext14 0300                                             __ptext23 0199  
                                           __ptext15 02B3                                             __ptext24 0170  
                                           __ptext16 021A                                             __ptext17 040A  
                                           __ptext18 02D9                                             __ptext19 024F  
                          LCD_DisplayDecimalNumber@a 002B                            LCD_DisplayDecimalNumber@i 0035  
                                     ?_lcd_BusyCheck 0070                                  ??_EEPROM_ReadNBytes 0079  
                                      __size_of_main 00E7                                          ??_lcd_Reset 0074  
                                         _LCD_Printf 063B                               _VAR_LcdTrackLineNum_U8 0068  
                          __end_of_EEPROM_ReadNBytes 02B3                           __size_of_LCD_DisplayString 001C  
                                   ___lldiv@dividend 0074                                      _LCD_DisplayChar 026E  
                  EEPROM_WriteByte@var_eepromData_u8 0074                                            stringcode 0003  
                                 _EEPROM_WriteNBytes 02D9                                      ??_lcd_DataWrite 0074  
                        __end_of_lcd_SendDataSignals 0202                                  ?_EEPROM_WriteNBytes 0075  
                                   ___lldiv@quotient 0079                             __end_of_LCD_GoToNextLine 01EC  
                                           stringdir 0003                                             stringtab 0003  
                                    ??_lcd_BusyCheck 0072                                 ??_EEPROM_WriteNBytes 007A  
                                   _EEPROM_WriteByte 024F                                     ??_lcd_SendNibble 0070  
